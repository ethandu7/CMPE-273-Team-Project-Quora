{"version":3,"sources":["components/NavBar/Navbar.module.css","components/Profile/Profile.module.css","_constant/user.constant.js","_reducers/profile.reducer.js","_reducers/index.js","_reducers/login.reducer.js","_reducers/signup.reducer.js","_actions/user.action.js","config.js","components/Login/Login.js","components/SignUp/SignUp.js","components/NavBar/Add_Q_Modal.js","components/AnswerEditor/AnswerEditor.js","components/QuestionPage/QuestionPage.js","components/Home/Home.js","components/Sidebar/TopicModal.js","components/Sidebar/Sidebar.js","components/SidebarLayout/SidebarLayout.js","components/NavBar/Navbar.js","components/TopicPage/TopicPage.js","components/Profile/Content/ProfileContent/ProfileContent.js","components/Profile/Content/AnswersContent/AnswersContent.js","components/Profile/Content/QuestionsContent/QuestionsContent.js","components/Profile/Content/FollowersContent/FollowersContent.js","components/Profile/Content/FollowingContent/FollowingContent.js","components/Profile/Content/Content.js","components/Profile/Sidebar/Sidebar.js","components/Profile/Profile.js","components/Messages/Messages.js","components/ContentPage/ContentPage.js","components/AnalysisPage/AnalysisPage.js","components/Main.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","search_result","profile_photo_image","profile_photo_image_wrapper","edit_text","center","contentTitle","marginRight","userConstants","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","PROFILE_UPDATE","initialState","user_info","avatar","first_name","last_name","profileCredential","about","email","city","state","zipCode","educations","careers","followed","active","created_answers","bookmarked_answers","created_questions","followed_people","following_people","rootReducer","combineReducers","authentication","arguments","length","undefined","action","type","loggingIn","loggedIn","user_id","firstname","lastname","loginFailed","err","signup","signingIn","signedUp","signUpFailed","profile","Object","objectSpread","data","userActions","login_request","login_success","login_failure","logout","signup_request","signup_success","signup_failure","profile_update","backend_host","Login","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","submitLogin","preventDefault","password","dispatch","submitted","axios","post","then","response","status","cookie","save","token","path","catch","console","log","bind","assertThisInitialized","_this$state","redirectVar","react_default","a","createElement","react_router","to","res_msg","style","color","className","onChange","placeholder","onClick","Component","connect","_ref","SignUp","submitSignUp","class","required","AddQModal","handlePost","content","questionText","topics","selectedTopics","headers","Authorization","concat","afteradd","handleSelectChange","getOptions","inputValue","get","params","exclude","options","_","filter","o","startsWith","toLower","label","slice","user_name","load","_this2","Modal","assign","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Form","Group","controlId","Label","Text","Control","as","rows","Async_default","isMulti","cacheOptions","defaultOptions","loadOptions","getOptionValue","option","_id","Footer","Button","variant","onHide","AnswerEditor","toString","RichTextEditor","createEmptyValue","createValueFromString","react_rte_default","CommentPanel","_Component","comment_text","handleSubmit","comment","anonymous","answerId","reload_comments","error","comments","show_comments","showComments","inherits","createClass","key","comment_list","map","idx","ListGroup","Item","border","padding","margin","fontSize","react_router_dom","owner","fontWeight","close_comments","marginLeft","inline","width","disabled","Collapse","in","AnswerList","_Component3","_this4","handleUpvote","put","upvote","upvotes","forceUpdate","handleDownvote","downvote","handleBookmark","handleEdit","edit_box","answer_string","handleUpdate","_this5","details","answer","edit_button","AnswerEditor_AnswerEditor","renderHTML","displayName","dist_default","fromNow","time","ButtonToolbar","bookmarked","QuestionPage_CommentPanel","BadgeGroup","_Component4","apply","Badge","pill","AnswerInput","_Component5","_this6","handleInputChange","QuestionPage","_this7","handleSubmitAnswer","answer_anonymous","questionId","answer_input","componentDidMount","handleInput","question","match","handleFollow","_onChangeAnonymous","_this8","questionFollowed","followers","_this9","checked","_this10","BadgeGroup_data","AnswerList_data","answers","Container","QuestionPage_BadgeGroup","Card","QuestionPage_AnswerInput","q_id","QuestionPage_AnswerList","html_truncate","require","Home","showModal","show_add","afterAdd","selectTopics","show_topics","user_feed","handleReload","_this3","main_panel","q","creator","Link","NavLink","Add_Q_Modal","show","textDecoration","TopicModal","ids","topic","topic_ids","update_sidebar","followed_topics","Sidebar","sidebar_links","header","medthod","url","res","sidebar_body","link","Nav","Sidebar_TopicModal","lineHeight","withRouter","SidebarLayout","component","rest","objectWithoutProperties","render","matchProps","Row","marginTop","Col","md","components_Sidebar_Sidebar","Math","random","navbar","handleLogout","remove","handleAdd","onChangeHandler","search","onSearchHandler","input","catagory","results","result_type","onCloseResultHandler","onClickHandler","navLogin","NavDropdown","title","addmodal","Navbar","bg","expand","Brand","Toggle","aria-controls","position","InputGroup","aria-label","aria-describedby","Append","TopicPage","questions","schemas","school","concentration","secondaryConcentration","degreeType","graduationYear","company","starYear","endYear","ProfileContent","editing_profile","onEditProfileHandler","new_state","onSaveProfileHandler","payload","onAddHandler","push","onNewItemHandler","index","field","new_items","toConsumableArray","profile_display","edu","career","uid","profile_edit","column","sm","Fragment","AnswersContent","question_id","QuestionsContent","FollowersContent","p","FollowingContent","Content","exact","Profile","imageSrc","imageHash","Date","now","show_edit_image","show_image_uploader","selectedFile","loaded","new_first_name","onOpenImageUploaderHandler","onCloseImageUploaderHandler","handleselectedFile","event","files","handleUpload","FormData","append","onUploadProgress","ProgressEvent","total","new_last_name","new_profileCredential","new_about","onDeactiveHandler","onCancelEditProfileHandler","onSaveEditProfileHandler","new_user_info","onChangeFollowHandler","new_profile","profile_content","onMouseEnter","onMouseLeave","Image","src","roundedCircle","xs","Profile_Sidebar_Sidebar","Profile_Content_Content","round","Messages","showInbox","sendMsg","newMsg","to_email","subject","messages","errMsg","loadInbox","onInboxClickHandler","onNewMsgClickHandler","sendNewMsg","onChangePageHandler","num","new_message","items","num_pages","_loop","number","Pagination","inbox","el","msg","from_email","new_first_sort","b","moment","utc","diff","old_first_sort","ContentPage","all","sort","onChangeFilterHandler","onSortHandler","context","activities","d","ret","obj","onObj","data_to_render","defaultActiveKey","eventKey","AnalysisPage","Main","NavBar_Navbar","components_SidebarLayout_SidebarLayout","ProfilePage","MessagesPage","App","components_Main","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","react_redux_es","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.82a52589.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_result\":\"Navbar_search_result__6OzIX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_photo_image\":\"Profile_profile_photo_image__1Hs55\",\"profile_photo_image_wrapper\":\"Profile_profile_photo_image_wrapper__1suZ6\",\"edit_text\":\"Profile_edit_text__JC2IY\",\"center\":\"Profile_center__2MZKb\",\"contentTitle\":\"Profile_contentTitle__2lO-e\",\"marginRight\":\"Profile_marginRight__BP9Ls\"};","export const userConstants = {\n    SIGNUP_REQUEST: 'USERS_SIGNUP_REQUEST',\n    SIGNUP_SUCCESS: 'USERS_SIGNUP_SUCCESS',\n    SIGNUP_FAILURE: 'USERS_SIGNUP_FAILURE',\n\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n    \n    LOGOUT: 'USERS_LOGOUT',\n\n    // Profile\n    PROFILE_UPDATE: 'PROFILE_UPDATE'\n};","import { userConstants } from '../_constant';\n\nconst initialState = {\n    user_info: {\n        avatar: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        profileCredential: \"\",\n        about: \"\",\n        email: \"\",\n        city: \"\",\n        state: \"\",\n        zipCode: \"\",\n        educations: [],\n        careers: []\n    },\n    followed: false,\n    active: false,\n    created_answers: [],\n    bookmarked_answers: [],\n    created_questions: [],\n    followed_people: [],\n    following_people: []\n}\n\nconst profile_update = (state = initialState, action) => {\n    switch (action.type) {\n        case userConstants.PROFILE_UPDATE:\n            let user_info = {\n                ...state.user_info,\n                ...action.data.user_info\n            };\n            let new_state = {\n                ...state,\n                ...action.data,\n                user_info: user_info\n            }\n            return new_state\n            break;\n        default:\n            return state;\n            break;\n    }\n}\n\nexport { profile_update as profile };","import { combineReducers } from 'redux';\n\nimport { authentication } from './login.reducer';\nimport { signup } from './signup.reducer';\nimport { profile } from './profile.reducer';\n\n\nconst rootReducer = combineReducers({\n  authentication,\n  signup,\n  profile\n});\n\nexport default rootReducer;","import { userConstants } from '../_constant';\n\n//let user = JSON.parse(localStorage.getItem('user'));\n//const initialState = user ? { loggedIn: true, user } : {};\n\nexport function authentication(state = {}, action) {\n  switch (action.type) {\n    case userConstants.LOGIN_REQUEST:\n      return {\n        loggingIn: true,\n        email: action.email,\n      };\n    case userConstants.LOGIN_SUCCESS:\n      return {\n        loggedIn: true,\n   //     email: action.email,\n   //     role: action.role,\n        user_id: action.user_id,\n        first_name: action.firstname,\n        last_name: action.lastname\n      }\n    case userConstants.LOGIN_FAILURE:\n      return {\n        loginFailed: true,\n        email: action.email,\n        err: action.err,\n      };\n    case userConstants.LOGOUT:\n      return {};\n    default:\n      return state\n  }\n}\n","import { userConstants } from '../_constant';\n\nexport function signup(state = {}, action) {\n  switch (action.type) {\n    case userConstants.SIGNUP_REQUEST:\n      return {\n        signingIn: true,\n        email: action.email,\n      };\n    case userConstants.SIGNUP_SUCCESS:\n      return {\n        signedUp: true,\n//       email: action.email,\n//        role: action.role,\n//        user_id: action.user_id,\n//        first_name: action.first_name\n      }\n    case userConstants.SIGNUP_FAILURE:\n      return {\n        signUpFailed: true,\n        email: action.email,\n        err: action.err,\n      };\n    default:\n      return state\n  }\n}","import { userConstants } from '../_constant';\n\nfunction login_request(email) { return { type: userConstants.LOGIN_REQUEST, email} }\nfunction login_success(user_id, firstname, lastname) { \n    return { type: userConstants.LOGIN_SUCCESS, user_id, firstname, lastname}; }\nfunction login_failure(email, err) { return { type: userConstants.LOGIN_FAILURE, email, err } }\nfunction logout() {\n    return { type: userConstants.LOGOUT};\n}\n\nfunction signup_request(email) { return { type: userConstants.SIGNUP_REQUEST, email} }\nfunction signup_success() { \n    return { type: userConstants.SIGNUP_SUCCESS}; }\nfunction signup_failure(email, err) { return { type: userConstants.SIGNUP_FAILURE, email, err } }\nfunction profile_update(data) {return {type: userConstants.PROFILE_UPDATE, data}}\n\nexport const userActions = {\n    login_request,\n    login_success,\n    login_failure,\n    logout, \n    signup_request,\n    signup_success,\n    signup_failure, \n    profile_update\n};","var backend_host = 'http://ec2-54-186-132-162.us-west-2.compute.amazonaws.com:8080';\n//var backend_host = 'http://localhost:5000';\n\n//var user_tracking_apis = 'http://34.222.10.95:3000';\nvar user_tracking_apis = 'http://34.221.236.225:8000/activityapi'\n//var david_test_apis = \"http://tp-cwmapi-elb-760743300.us-west-2.elb.amazonaws.com/msgstore/v1\";\nvar david_test_apis = 'http://34.221.236.225:8000/msgstore/v1'\n//var david_elb = 'http://tp-cwmapi-elb-760743300.us-west-2.elb.amazonaws.com'\n\n\n//var msgstore_apis = 'http://35.164.157.104:8000/msgstore/v1';\n\n//var user_auth_apis = 'http://54.200.4.62:3001';\nvar user_auth_apis = 'http://34.221.236.225:8000/authapi';\n\nexport {backend_host, user_tracking_apis, david_test_apis, user_auth_apis};\n","import React, { Component } from 'react';\nimport '../../App.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { userActions } from '../../_actions';\nimport { connect } from 'react-redux';\nimport {backend_host,  user_auth_apis} from '../../config';\n//import Cookies from 'universal-cookie';\n\n//Define a Login Component\nclass Login extends Component {\n    //call the constructor method\n    constructor(props) {\n        //Call the constrictor of Super class i.e The Component\n        super(props);\n        //maintain the state required for this component\n        this.state = {\n            email: \"\",\n            password: \"\",\n            submitted: false,\n        }\n        //Bind the handlers to this class\n        this.handleChange = this.handleChange.bind(this);\n        this.submitLogin = this.submitLogin.bind(this);\n        //this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    //submit Login handler to send a request to the node backend\n    submitLogin = (e) => {\n //       console.log(\"run login\");\n        //prevent page from refresh\n        e.preventDefault();\n\n        const data = {\n            email: this.state.email,\n            password: this.state.password\n        }\n        const { email } = this.state;\n\n        // reset by logout\n        this.props.dispatch(userActions.logout());\n        this.props.dispatch(userActions.login_request(email));\n\n        this.setState({ submitted: true });\n\n        if (data.email && data.password) {\n            //set the with credentials to true\n //           axios.defaults.withCredentials = true;\n//\t\t\taxios.defaults.crossDomain = true;\n//            console.log(\"axios.defaults.crossDomain = true\");\n            //make a post request with the user data\n            \n            axios.post(backend_host +'/signin', data)\n                .then(response => {\n//                    console.log(response);\n                    //console.log(\"Status Code : \", response.status);\n                    //console.log(\"role:\", response.data);\n                    if (response.status === 200 /*&& response.data.auth === true*/) {\n//\t\t\t\t\t\tconst cookies = new Cookies();\n\t\t\t\t\t\tcookie.save('JWT', response.data.token, { path: '/' });\n\t\t\t\t\t\t//console.log(cookies.get('JWT'));\n                        this.props.dispatch(userActions.login_success(response.data.user_id,response.data.first_name, response.data.last_name));\n                    } /*else {\n                        this.props.dispatch(userActions.login_failure(email, \"HTTP CODE != 200\"));\n                    }*/\n\n                }).catch(err => {\n                    this.props.dispatch(userActions.login_failure(email, err));\n                    console.log(err);\n                });\n        }\n    }\n    /*\n        handleClick = (e) => {\n            e.preventDefault();\n            this.setState({ to_SignUp: true });\n        }\n    */\n\n    render() {\n        const { authentication } = this.props;\n        const { email, password, submitted } = this.state;\n\n        //redirect based on successful login\n        let redirectVar = null;\n        //console.log(authentication);\n\n        if (authentication.loggedIn === true) {\n            redirectVar = <Redirect to=\"/\" />;\n        }\n\n\n        let res_msg = null;\n        if (authentication.loginFailed === true) {\n            res_msg = (<p style={{color: 'red'}}>Invalid Password or Email!</p>);\n        }\n\n        return (\n            <div>\n                {redirectVar}\n                <div className=\"container\">\n\n                    <div className=\"login-form\">\n                        <div className=\"main-div\">\n                            <div className=\"panel\">\n                                <h2>Login</h2>\n                                <p>Please enter your email and password</p>\n                                {res_msg}\n                            </div>\n\n                            <div className={\"form-group\" + (submitted && !email ? 'has-error' : '')}>\n                                <input onChange={this.handleChange} type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email Address\" />\n                                {submitted && !email &&\n                                    <div className=\"help-block\">Email is required</div>\n                                }\n\n                            </div>\n                            <div className={\"form-group\" + (submitted && !password ? 'has-error' : '')}>\n                                <input onChange={this.handleChange} type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Password\" />\n                                {submitted && !password &&\n                                    <div className=\"help-block\">Password is required</div>\n                                }\n                            </div>\n                            <button onClick={this.submitLogin} className=\"btn btn-primary\">Login</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n// reducer: authentication 's output maps to this.props.authentication\nconst mapStateToProps = ({ authentication }) => ({ authentication });\n// apply above mapping to Login class\nexport default connect(mapStateToProps)(Login);\n","import React, { Component } from 'react';\nimport '../../App.css';\nimport axios from 'axios';\n//import cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { userActions } from '../../_actions';\nimport { connect } from 'react-redux';\nimport { backend_host} from '../../config';\n//import Cookies from 'universal-cookie';\n\n//Define a Login Component\nclass SignUp extends Component {\n    //call the constructor method\n    constructor(props) {\n        //Call the constrictor of Super class i.e The Component\n        super(props);\n        //maintain the state required for this component\n        this.state = {\n            first_name: \"\",\n            last_name: \"\",\n            //            role: \"\",\n            email: \"\",\n            password: \"\",\n            submitted: false,\n            //            success: false\n        }\n        //Bind the handlers to this class\n        this.handleChange = this.handleChange.bind(this);\n        this.submitSignUp = this.submitSignUp.bind(this);\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    //submit Login handler to send a request to the node backend\n    submitSignUp = (e) => {\n        e.preventDefault();\n        const data = {\n            first_name: this.state.first_name,\n            last_name: this.state.last_name,\n            //            role: this.state.role,\n            password: this.state.password,\n            email: this.state.email\n        }\n\n        console.log('Fire submit button!');\n\n        const { email } = this.state;\n\n        // reset by logout\n        this.props.dispatch(userActions.signup_request(email));\n        this.setState({ submitted: true });\n\n        if (data.first_name && data.last_name && data.password && data.email) {\n\n            //set the with credentials to true\n            //       axios.defaults.withCredentials = true;\n            //make a post request with the user data\n            axios.post(backend_host + '/signup', data)\n                .then(response => {\n                    console.log(\"Status Code : \", response.status);\n                    if (response.status === 200) {\n                        //cookie.save('userId', response.data.user_id, { path: '/', expires: \"\", maxAge: 1000, httpOnly: false });\n                        //cookie.save('role', response.data.role, { path: '/', expires: \"\", maxAge: 1000, httpOnly: false });\n                        //                   const cookies = new Cookies();\n                        //                   cookie.save('JWT', response.data.token, { path: '/' });\n                        this.props.dispatch(userActions.signup_success(email, response.data.user_id));\n                        //                  this.props.dispatch(userActions.login_success(email, response.data.role, response.data.user_id));\n                    } else {\n                        this.props.dispatch(userActions.signup_failure(email, \"HTTP CODE != 200\"));\n                    }\n                }).catch(err => {\n                    this.props.dispatch(userActions.signup_failure(email, err));\n                    //                console.log(error.body.message)\n                });\n        }\n    }\n\n    render() {\n        //redirect based on successful login\n\n        const { signup } = this.props;\n        //const { authentication } = this.props;\n        const { first_name, last_name, email, password, submitted } = this.state;\n\n        let redirectVar = null;\n        //        console.log(signup);\n        if (signup.signedUp === true) {\n            redirectVar = <Redirect to=\"/login\" />\n        }\n        let res_msg = null;\n        if (signup.signUpFailed === true) {\n            res_msg = (<p style={{color: 'red'}} class=\"err_msg\">Exsiting User!</p>);\n        }\n\n        return (\n            <div>\n                {redirectVar}\n                <div className=\"container\">\n\n                    <div className=\"login-form\">\n                        <div className=\"main-div\">\n                            <div className=\"panel\">\n                                <h2>Sign Up</h2>\n                                {res_msg}\n                                <p>Please enter your name, email and password</p>\n                            </div>\n                            <div className={\"form-group\" + (submitted && !first_name ? 'has-error' : '')}>\n                                <input onChange={this.handleChange} type=\"text\" className=\"form-control\" name=\"first_name\" placeholder=\"First Name\" required />\n                                {submitted && !first_name &&\n                                    <div className=\"help-block\">First Name is required</div>\n                                }\n                            </div>\n                            <div className={\"form-group\" + (submitted && !last_name ? 'has-error' : '')}>\n                                <input onChange={this.handleChange} type=\"text\" className=\"form-control\" name=\"last_name\" placeholder=\"Last Name\" required></input>\n                                {submitted && !last_name &&\n                                    <div className=\"help-block\">Last Name is required</div>\n                                }\n                            </div>\n                            <div className={\"form-group\" + (submitted && !email ? 'has-error' : '')}>\n                                <input onChange={this.handleChange} type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email Address\" required></input>\n                                {submitted && !email &&\n                                    <div className=\"help-block\">Email is required</div>\n                                }\n                            </div>\n                            <div className={\"form-group\" + (submitted && !password ? 'password' : '')}>\n                                <input onChange={this.handleChange} type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Password\" required />\n                                {submitted && !password &&\n                                    <div className=\"help-block\">Password is required</div>\n                                }\n                            </div>\n                            <button onClick={this.submitSignUp} className=\"btn btn-primary\">Sign Up</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n// reducer: authentication 's output maps to this.props.authentication\nconst mapStateToProps = ({ signup, authentication }) => ({ signup, authentication });\n// apply above mapping to Login class\nexport default connect(mapStateToProps)(SignUp);\n","import { Modal, Button, Form } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport AsyncSelect from 'react-select/lib/Async';\nimport axios from 'axios';\nimport _ from \"lodash\";\nimport {david_test_apis, backend_host} from '../../config';\nimport cookie from 'react-cookies';\n\nclass AddQModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user_name: this.props.user_name,\n      selectedTopics: [],\n      options: [],\n      questionText: '',\n      token: cookie.load('JWT'),\n    }\n    this.handlePost = this.handlePost.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n    console.log(e.target.name, e.target.value);\n  }\n\n  handlePost = (e) => {\n    e.preventDefault();\n    const data = {\n      content: this.state.questionText,\n      topics: this.state.selectedTopics\n    }\n    console.log(data);\n\n    axios.post(backend_host + '/addQuestion', data, {\n      headers: {\n        'Authorization': `Bearer ${this.state.token}`\n      }\n    }).then(response => {\n     // console.log(response.data)\n      this.props.afteradd();\n    })\n\n  }\n\n  componentDidMount(){\n\n  }\n\n  handleSelectChange = (value, { action }) => {\n    console.log(value, action);\n    this.setState({\n      selectedTopics: value\n    })\n  };\n\n\n getOptions = inputValue => {\n   return axios.get(backend_host + '/topics', {\n    headers: {\n      'Authorization': `Bearer ${this.state.token}`\n    },\n     params: {\n      exclude: false\n     }\n   })\n   .then(response=>{\n     //console.log(response.data);\n//     this.setState({\n//       options: response.data\n//     })\n     return response.data\n   }).then(options => {\n    const filtered = _.filter(options, o =>\n      _.startsWith(_.toLower(o.label), _.toLower(inputValue))\n    );\n     return filtered.slice(0, 10);\n   })\n  }\n\n  render() {\n\n    //  const { selectedOption } = this.state;\n\n    return (\n      <Modal\n        {...this.props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Add Question\n            </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n              <Form.Label>{this.state.user_name} asked</Form.Label>\n              <Form.Text className=\"text-muted\">\n                Start your question with \"What\", \"How\", \"Why\", etc.\n              </Form.Text>\n              <Form.Control as=\"textarea\" rows=\"3\" name=\"questionText\" onChange={this.handleChange} />\n              <Form.Text className=\"text-muted\">\n                Select topics you want to post question to\n              </Form.Text>\n              <AsyncSelect\n                isMulti\n                cacheOptions\n                defaultOptions\n                loadOptions={inputValue => this.getOptions(inputValue)}\n                onChange={this.handleSelectChange}\n                getOptionValue={option => option._id}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"light\" onClick={this.props.onHide}>Cancel</Button>\n          <Button onClick={this.handlePost}>Add Question</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n// apply above mapping to Login class\nexport default AddQModal","import React, { Component } from 'react';\nimport RichTextEditor from 'react-rte';\nimport PropTypes from 'prop-types';\n\nexport default class AnswerEditor extends Component {\n  static propTypes = {\n    onChange: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    let value = RichTextEditor.createEmptyValue();\n    if (this.props.value){\n      value = RichTextEditor.createValueFromString(this.props.value, 'html');\n    }\n    this.state = {\n      value: value\n      //  value: RichTextEditor.createEmptyValue()\n //     value: RichTextEditor.createValueFromString(this.props.value, 'html')\n   }\n  }\n  onChange = (value) => {\n\n  //  console.log(value);\n    this.setState({ value });\n\n    if (this.props.onChange) {\n      // Send the changes up to the parent component as an HTML string.\n      // This is here to demonstrate using `.toString()` but in a real app it\n      // would be better to avoid generating a string on each change.\n      this.props.onChange(\n        value.toString('html')\n      );\n    }\n  };\n\n  render() {\n    return (\n      <RichTextEditor\n        value={this.state.value}\n        onChange={this.onChange}\n        placeholder=\"Write your answer\"\n      />\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\n//import { userActions } from '../../_actions';\nimport { connect } from 'react-redux';\nimport './QuestionPage.css';\nimport { ListGroup, Container, Badge, ButtonToolbar, Button, Collapse, Card, Form } from 'react-bootstrap';\n//import ReactPaginate from 'react-paginate';\nimport axios from 'axios';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\nimport AnswerEditor from '../AnswerEditor/AnswerEditor';\nimport renderHTML from 'react-render-html';\nimport { david_test_apis, user_tracking_apis, backend_host } from '../../config';\n\nexport class CommentPanel extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            comment_text: '',\n            show_comments: false,\n            comments: [],\n            token: cookie.load('JWT')\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.reload_comments = this.reload_comments.bind(this);\n    }\n    onChange = (e) => {\n        //        console.log(e.target.value)\n        this.setState({ 'comment_text': e.target.value })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        //        console.log(this.props.data);\n        const data = {\n            comment: this.state.comment_text,\n            anonymous: false\n        };\n        axios.post(backend_host + '/answer/' + this.props.answerId + '/comment', data, {\n            headers: {\n                'Authorization': `Bearer ${this.state.token}`\n            }\n        }).then(response => {\n            this.reload_comments();\n        }).catch(error => {\n            console.log(error);\n        })\n\n    }\n\n    reload_comments = () => {\n        axios.get(backend_host + '/answer_comments/'  + this.props.answerId, {\n            headers: {\n                'Authorization': `Bearer ${this.state.token}`\n            },\n//            params: {\n//                answerId: this.props.answerId,\n//                depth: 0\n//            }\n        }).then(response => {\n            this.setState({\n                comments: response.data,\n                show_comments: true,\n                comment_text: \"\"\n            })\n        }).catch(error => {\n            console.log(error);\n        })\n\n    }\n    showComments = (e) => {\n        e.preventDefault();\n        axios.get(backend_host + '/answer_comments/' + this.props.answerId, {\n            headers: {\n                'Authorization': `Bearer ${this.state.token}`\n            },\n //           params: {\n //               answerId: this.props.answerId,\n //               depth: 0\n//            }\n        }).then(response => {\n            this.setState({\n                'show_comments': true,\n                'comments': response.data\n            })\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    render() {\n        const { comment_text } = this.state\n\n        let comment_list = null;\n        if (this.state.show_comments === true) {\n\n            if (this.state.comments && this.state.comments.comments.length !== 0) {\n                comment_list = this.state.comments.comments.map((post, idx) => {\n                    return (\n                        <ListGroup.Item key={idx} style={{ border: 'none' }}>\n                            <ul className=\"list-unstyled\" style={{ 'padding': 0, margin: 0 }}>\n                            <li style={{ fontSize: 14 }}><Link style={{ color: 'black' }} to={'/profile/' + post.owner._id}>{post.owner.user_info.first_name} {post.owner.user_info.last_name}</Link></li>\n                                <li className='comment_body'> {post.comment}  </li>\n                            </ul>\n                        </ListGroup.Item>\n                    )\n                });\n            }\n            else {\n\n                comment_list = (<ListGroup.Item style={{ border: 'none' }}>\n                    <ul className=\"list-unstyled\" style={{ 'padding': 0, margin: 0 }}>\n                        <li style={{ 'fontWeight': 'bold', 'fontSize': 13 }}>Be the first to comment this answer!</li>\n                    </ul>\n                </ListGroup.Item>)\n\n            }\n        }\n        let close_comments = null;\n        if (this.state.show_comments === true) {\n            close_comments = <Button style={{ 'marginLeft': 12 }} size=\"sm\" variant=\"link\" onClick={() => this.setState({ show_comments: false })}> Close </Button>\n        }\n\n        return (\n            <div className=\"threaded_comments\">\n                <Form inline>\n                    <Form.Group >\n                        <Button size=\"sm\" className=\"btn-circle\">\n                            <span className=\"fa fa-user fa-lg\" style={{ color: 'FFFFFF' }}></span>\n                        </Button>\n                        <Form.Control style={{ 'marginLeft': 12, 'width': 600 }}\n                            as=\"textarea\" rows=\"1\" size=\"sm\" type=\"text\" placeholder=\"Add a comment...\"\n                            onChange={this.onChange} value={this.state.comment_text} />\n                        <Button style={{ 'marginLeft': 12 }}\n                            size=\"sm\" disabled={!comment_text}\n                            onClick={this.handleSubmit}>\n                            Add Comment</Button>\n                        <Button style={{ 'marginLeft': 12 }} size=\"sm\" variant=\"link\" onClick={this.showComments}> All </Button>\n                        {close_comments}\n                    </Form.Group>\n                </Form>\n                <Collapse in={this.state.show_comments}>\n                    <ListGroup>\n                        {comment_list}\n                    </ListGroup>\n                </Collapse>\n            </div>\n        )\n    }\n}\n\nexport class AnswerEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            answer_string: null,\n        }\n    }\n    static propTypes = {\n        onChange: PropTypes.func\n    };\n\n    handleInputChange = (value) => {\n        //       console.log(value);\n        this.props.onChange(value);\n        //       this.setState({ answer_string: value })\n    }\n\n    render() {\n        return (\n            <AnswerEditor onChange={this.handleInputChange} />\n        )\n    }\n}\n\nexport class AnswerList extends Component {\n    static propTypes = {\n        data: PropTypes.array.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            edit_box: false,\n            answer_string: null,\n            token: cookie.load('JWT')\n        }\n    }\n    handleUpvote = (idx, value) => {\n        console.log('upvote this answer', value);\n        const data = {};\n        axios.put(backend_host + '/answer/' + value + '/upvote', data, {\n            headers: {\n                'Authorization': `Bearer ${this.state.token}`\n            },\n        }).then(response => {\n            console.log(response.data);\n            this.props.data[idx].upvote = response.data.upvotes;\n            this.forceUpdate();\n            //            this.componentDidMount();\n        })\n    }\n\n    handleDownvote = (idx,value) => {\n        console.log('downvote this answer', value);\n        const data = {};\n        axios.put(backend_host + '/answer/' + value + '/downvote', data, {\n            headers: {\n                'Authorization': `Bearer ${this.state.token}`\n            },\n        }).then(response => {\n            console.log(response.data);\n            this.props.data[idx].downvote = response.data.downvote;\n            this.forceUpdate();\n            //            this.componentDidMount();\n        })\n    }\n\n    handleBookmark = (value) => {\n        const data = {};\n        axios.post(backend_host + '/bookmark/answer/' + value, data, {\n            headers: {\n                'Authorization': `Bearer ${this.state.token}`\n            },\n        }).then(response => {\n            console.log(response.data);\n //        this.props.data[idx].content = this.state.answer_string;\n            this.forceUpdate();\n            //window.location.reload();\n            //            this.componentDidMount();\n        }) \n        console.log('bookmard this answer', value)\n    }\n\n    handleEdit = (value) => {\n        this.setState({ edit_box: true })\n    }\n\n    handleChange = (value) => {\n        //        console.log(value);\n        this.setState({ answer_string: value }, () => {\n            //            console.log(this.state.answer_string)\n        })\n    };\n\n    handleUpdate = (idx, value) => {\n        const data = {\n            content: this.state.answer_string,\n            //            anonymous: this.state.answer_anonymous\n        };\n        console.log(data);\n\n        axios.put(backend_host + '/answer/' + value, data, {\n            headers: {\n                'Authorization': `Bearer ${this.state.token}`\n            },\n        }).then(response => {\n            console.log(response.data);\n            this.setState({ edit_box: false });\n            this.props.data[idx].content = this.state.answer_string;\n            this.forceUpdate();\n            //window.location.reload();\n            //            this.componentDidMount();\n        })\n    }\n\n    render() {\n        let details = null;\n\n\n        if (this.props.data.length !== 0) {\n            details = this.props.data.map((post, idx) => {\n                let answer = null;\n                let edit_button = null;\n                if (this.state.edit_box === true) {\n                    answer = <AnswerEditor value={post.content} onChange={this.handleChange}></AnswerEditor>;\n                     if (post.owner._id === this.props.user_id)\n                    edit_button = (<Button className=\"q_page_button pull-right\" variant=\"link\" onClick={() => this.handleUpdate(idx,post._id)}>\n                        <span className=\"fa fa-edit\"></span> Update</Button>)\n                }\n                else {\n                    answer = (<div>\n                        {renderHTML(post.content)}\n                    </div>);\n                    if (post.owner._id === this.props.user_id)\n                    edit_button = (<Button className=\"q_page_button pull-right\" variant=\"link\" onClick={() => this.handleEdit(post._id)}>\n                        <span className=\"fa fa-edit\"></span> Edit</Button>)\n\n                }\n\n                let displayName = (<ul className=\"list-unstyled\">\n                    <li style={{ fontSize: 14 }}><Link style={{ color: 'black' }} to={'/profile/' + post.owner._id}>{post.owner.user_info.first_name} {post.owner.user_info.last_name}, </Link><span style={{ marginLeft: 10 }}>{post.owner.user_info.profileCredential}</span></li>\n                    <li><small className=\"text-muted\">Answered <Moment fromNow>{post.time}</Moment></small></li>\n                </ul>)\n                if (post.anonymous === true) {\n                    displayName = (<ul className=\"list-unstyled\">\n                        <li style={{ fontSize: 14 }}>Anonymous User</li>\n                        <li><small className=\"text-muted\">Answered <Moment fromNow>{post.time}</Moment></small></li>\n                    </ul>)\n                }\n                return (\n                    <ListGroup.Item key={idx}>\n                        {displayName}\n\n                        {/*<ul className=\"list-unstyled\">\n                            <li style={{ fontSize: 14 }}><Link style={{ color: 'black' }} to={'profile/' + post.createdBy.user_id}>{post.createdBy.name},</Link><span style={{ marginLeft: 10 }}>{post.createdBy.crediential}</span></li>\n                            <li><small className=\"text-muted\">Answered <Moment fromNow>{post.createdOn}</Moment></small></li>\n                        </ul>*/}\n                        {/* <p>\n                            {renderHTML(post.answerText)}\n                        </p> */}\n                        {answer}\n                        <ButtonToolbar style={{ 'marginLeft': -10 }}>\n                            <Button className=\"q_page_button\" variant=\"link\" onClick={() => this.handleUpvote(idx, post._id)}>\n                                <span className=\"fa fa-arrow-up\"></span> Upvote  · {post.upvote}</Button>\n                            <Button className=\"q_page_button pull-right\" variant=\"link\" onClick={() => this.handleDownvote(idx, post._id)}>\n                                <span className=\"fa fa-arrow-down\"></span> Downvote  · {post.downvote}</Button>\n                            <Button className=\"q_page_button pull-right\" disabled={post.bookmarked} variant=\"link\" onClick={() => this.handleBookmark(post._id)}>\n                                <span className=\"fa fa-bookmark\"></span> Bookmark</Button>\n                            {edit_button}\n                            {/*\n                            <Button className=\"q_page_button pull-right\" variant=\"link\" onClick={() => this.handleEdit(post._id)}>\n                                <span className=\"fa fa-edit\"></span> Edit</Button>\n                                */}\n                        </ButtonToolbar>\n\n                        <CommentPanel answerId={post._id}></CommentPanel>\n                    </ListGroup.Item>\n\n                )\n            });\n        }\n        else {\n            details = (<ListGroup.Item><div>No Answer Yet</div></ListGroup.Item>)\n        }\n        return (\n            <ListGroup variant=\"flush\">\n                {details}\n            </ListGroup>\n        )\n    }\n}\n\nexport class BadgeGroup extends Component {\n    static propTypes = {\n        data: PropTypes.array.isRequired,\n    };\n\n    render() {\n        let details = null;\n\n        if (this.props.data.length !== 0) {\n            details = this.props.data.map((post, idx) => {\n                return (\n                    <Badge pill variant=\"light\" className='topic_pill' key={idx}>\n                        <Link style={{ color: '#666' }} to={'/topics/' + post._id}>{post.label}</Link>\n                    </Badge>\n\n                )\n            });\n        }\n        else {\n            details = (<div>No Topic Yet</div>)\n        }\n        return (\n            <div >\n                {details}\n            </div>\n        )\n    }\n}\n\nexport class AnswerInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            answer_string: null,\n        }\n    }\n    static propTypes = {\n        onChange: PropTypes.func\n    };\n\n    handleInputChange = (value) => {\n        //       console.log(value);\n        this.props.onChange(value);\n        //       this.setState({ answer_string: value })\n    }\n\n    render() {\n        return (\n            <AnswerEditor onChange={this.handleInputChange} />\n        )\n    }\n}\n\nclass QuestionPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user_name: this.props.authentication.first_name + ' ' + this.props.authentication.last_name,\n            answer_input: false,\n            question: {},\n            questionId: this.props.match.params.questionId,\n            followed: false,\n            answer_string: null,\n            token: cookie.load('JWT'),\n            answer_anonymous: false\n        }\n        this.handleFollow = this.handleFollow.bind(this);\n        this.handleSubmitAnswer = this.handleSubmitAnswer.bind(this);\n        this._onChangeAnonymous = this._onChangeAnonymous.bind(this);\n    }\n\n    componentDidMount() {\n        //        const fake_data =\n        //            { \"success\": \"Question fetched\", \"data\": { \"followed\": false, \"answers\": [{ anoymous: true, bookmarked: true, upvote: 1, downvote: 2, createdBy: { name: \"Someone\", user_id: 123456, crediential: \"Test Only\" }, 'answerText': \"<p><strong>I don't know</strong></p>\", \"_id\": 123 }], \"follower\": 5, \"_id\": \"5ccf392b1b83d55e4c6c85fe\", \"question_text\": \"how is the weather\", \"display_name\": \"Avi\", \"questionTopics\": [{ \"_id\": \"5ccf392b1b83d55e4c6c8600\", \"topic_id\": 3, \"name\": \"Test Topic 3\" }, { \"_id\": \"5ccf392b1b83d55e4c6c85ff\", \"topic_id\": 1, \"name\": \"Test Topic 1\" }], \"dateCreated\": \"2019-05-05T19:27:39.497Z\", \"question_id\": 16, \"__v\": 0 } }\n\n        axios.get(backend_host + '/questions/' + this.state.questionId, {\n            headers: {\n                'Authorization': `Bearer ${this.state.token}`\n            },\n            //            params: {\n            //                questionId: this.state.questionId,\n            //                depth: 1\n            //            }\n        }).then(response => {\n            //console.log(response.data)\n            this.setState({\n                //                question: response.data.data\n                question: response.data.question,\n                followed: response.data.questionFollowed,\n                followers: response.data.question.followers\n            })\n        })\n    }\n\n    handleFollow() {\n        //        console.log(\"follow this question\");\n\n        const data = {\n//            action: 'question',\n//            ids: [this.state.questionId],\n//            unfollow: false\n        }\n        //        console.log(data);\n\n        axios.post(backend_host + '/question/' + this.state.questionId + '/follow', data, {\n            headers: {\n                'Authorization': `Bearer ${this.state.token}`\n            }\n        }).then(response => {\n            //            console.log(response);\n            this.setState({\n                followed: true,\n                followers: response.data.followers\n            })\n        }).catch(error => {\n            console.log(error);\n        });\n\n    }\n\n    handleSubmitAnswer = (e) => {\n        e.preventDefault();\n        const data = {\n            content: this.state.answer_string,\n            anonymous: this.state.answer_anonymous\n        };\n        console.log(data);\n\n        axios.post(backend_host + '/question/' + this.state.questionId + '/answer', data, {\n            headers: {\n                'Authorization': `Bearer ${this.state.token}`\n            },\n        }).then(response => {\n            console.log(response.data);\n            this.setState({ answer_input: false});\n            this.componentDidMount();\n        })\n\n    };\n\n    handleInput = (value) => {\n        //        console.log(value);\n        this.setState({ answer_string: value }, () => {\n            //            console.log(this.state.answer_string)\n        })\n    };\n\n    _onChangeAnonymous(e) {\n        this.setState({ answer_anonymous: e.target.checked });\n    }\n\n    render() {\n        //    console.log(this.state.question);\n        let BadgeGroup_data = [];\n        if ('topics' in this.state.question) {\n            BadgeGroup_data = this.state.question.topics;\n        }\n        let AnswerList_data = [];\n        if ('answers' in this.state.question) {\n            AnswerList_data = this.state.question.answers;\n        }\n        let redirectVar = null;\n        if (this.props.authentication.loggedIn !== true) {\n            redirectVar = <Redirect to=\"/login\" />\n        }\n        return (\n            <div>\n                <Container>\n                    {redirectVar}\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <BadgeGroup data={BadgeGroup_data} />\n                            <h4><b>{this.state.question.content}</b></h4>\n                            <ButtonToolbar style={{ 'marginLeft': -10 }}>\n                                <Button className=\"q_page_button\" variant=\"link\" onClick={() => this.setState({ answer_input: !this.state.answer_input })}>\n                                    <span className=\"fa fa-edit\"></span> Answer</Button>\n                                <Button className=\"q_page_button\" variant=\"link\" onClick={this.handleFollow} disabled={this.state.followed}>\n                                    <span className=\"fa fa-plus-square\"></span> {this.state.followed ? 'Followed' : 'Follow'}  ·  {this.state.followers}</Button>\n                            </ButtonToolbar>\n                            <Collapse in={this.state.answer_input}>\n                                <Card>\n                                    <Card.Header>{this.state.user_name}</Card.Header>\n                                    <Card.Body>\n                                        <AnswerInput q_id={this.state.question._id} onChange={this.handleInput} />\n                                    </Card.Body>\n                                    <Card.Footer className=\"text-muted\">\n                                        <input\n                                            type=\"checkbox\"\n                                            onChange={this._onChangeAnonymous}\n                                            checked={this.state.answer_anonymous}\n                                        />\n                                        <span style={{ fontSize: 14, marginRight: 10 }}>   Answer anonymously </span>\n                                        <Button size=\"sm\" onClick={this.handleSubmitAnswer}> Submit</Button>\n                                    </Card.Footer>\n                                </Card>\n                            </Collapse>\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <AnswerList data={AnswerList_data} user_id={this.props.authentication.user_id}/>\n                </Container>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = ({ authentication }) => ({ authentication });\nexport default connect(mapStateToProps)(QuestionPage);","import React, { Component } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport './Home.css';\n//import { userActions } from '../../_actions';\nimport { connect } from 'react-redux';\n//import Sidebar from '../Sidebar/Sidebar';\nimport { Card, Button } from 'react-bootstrap';\nimport AddModal from '../NavBar/Add_Q_Modal';\nimport axios from 'axios';\nimport { david_test_apis, backend_host } from '../../config';\nimport renderHTML from 'react-render-html';\nimport Moment from 'react-moment';\nimport { BadgeGroup } from '../QuestionPage/QuestionPage'\n\nvar html_truncate = require('html-truncate');\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user_feed: [],\n            show_add: false,\n            user_name: this.props.authentication.first_name + ' ' + this.props.authentication.last_name,\n            token: cookie.load('JWT'),\n            // refresh: false\n        }\n        this.showModal = this.showModal.bind(this);\n        this.handleReload = this.handleReload.bind(this);\n    }\n\n    showModal = (e) => {\n        e.preventDefault();\n        this.setState({\n            show_add: true,\n        })\n    }\n\n    afterAdd = () => {\n        this.setState({\n            show_add: false\n        })\n    }\n\n    selectTopics = (e) => {\n        e.preventDefault();\n        this.setState({\n            show_topics: true\n        })\n    }\n\n    handleReload(e) {\n        e.preventDefault();\n        axios.get(backend_host + '/userfeed', {\n            headers: {\n                'Authorization': `Bearer ${this.state.token}`\n            },\n        }).then(response => {\n\n            this.setState({\n                user_feed: response.data,\n                //refresh: false\n            })\n\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    componentDidMount() {\n        axios.get(backend_host + '/userfeed', {\n            headers: {\n                'Authorization': `Bearer ${this.state.token}`\n            },\n            //          params: {\n            //               topAnswer: true,\n            //              depth: 1\n            //          }\n        }).then(response => {\n            //           console.log(response);\n            this.setState({\n                user_feed: response.data,\n                //    refresh: false\n            })\n\n        }).catch(error => {\n            console.log(error);\n        })\n        /*\n                const questions = [\n                    {\n                        \"questionText\": \"Just need  a post to test Frontend\",\n                        \"_id\": '5cc78a2f71b80f00016d4285',\n                        \"top_answer\":\n                        {\n                            answerText: 'AnswerText1',\n                            createdOn: \"2000-01-23T04:56:07.000+00:00\",\n                            createdBy: \"createdBy1\"\n                        }\n                    },\n                    {\n                        \"questionText\": \"questionText2\",\n                        \"top_answer\":\n                        {\n                            answerText: 'AnswerText2',\n                            createdOn: \"2000-01-23T04:56:07.000+00:00\",\n                            createdBy: \"createdBy2\"\n                        }\n                    }\n                ];\n                this.setState({\n        //            sidebar_links: sidebar_links,\n                    questions: questions\n                });\n                */\n    }\n\n    render() {\n\n        let main_panel = null;\n\n        if (this.state.user_feed.length !== 0) {\n            main_panel = this.state.user_feed.map((q, idx) => {\n                let answer = null;\n //               console.log(q);\n                if ('answers' in q && q.answers.length !== 0) {\n                    let creator = (<ul className=\"list-unstyled\">\n                        <li style={{ fontSize: 14 }}><Link style={{ color: 'black' }} to={'/profile/' + q.answers[0].owner._id}>{q.answers[0].owner.user_info.first_name} {q.answers[0].owner.user_info.last_name},</Link><span style={{ marginLeft: 10 }}>{q.answers[0].owner.user_info.profileCredential}</span></li>\n                        <li><small className=\"text-muted\">Answered <Moment fromNow>{q.answers[0].time}</Moment></small></li>\n                    </ul>)\n\n                    if (q.answers[0].anonymous === true) {\n                        creator = (<ul className=\"list-unstyled\">\n                            <li style={{ fontSize: 14 }}>Anonymous User</li>\n                            <li><small className=\"text-muted\">Answered <Moment fromNow>{q.answers[0].time}</Moment></small></li>\n                        </ul>)\n                    }\n                    //console.log(html_truncate(q.answers[0].answerText, 3));\n                    answer = (\n                        <div>\n                            {creator}\n                            {/*\n                        <ul className=\"list-unstyled\">\n                            <li style={{ fontSize: 14 }}><Link style={{ color: 'black' }} to={'/profile/' + q.answers[0].owner._id}>{q.answers[0].owner.user_info.first_name} {q.answers[0].owner.user_info.last_name},</Link><span style={{ marginLeft: 10 }}>{q.answers[0].owner.user_info.profileCredential}</span></li>\n                            <li><small className=\"text-muted\">Answered <Moment fromNow>{q.answers[0].time}</Moment></small></li>\n                        </ul>\n                        */}\n                            <div className=\"comment_truncate\">\n                                {renderHTML(html_truncate(q.answers[0].content, 150))}\n                            </div>\n                        </div>\n                    )\n                }\n                else {\n                    answer = <p>Be the first to answer this question! </p>\n                }\n\n\n                {/*\n                if ('answers' in q) {\n                    console.log(html_truncate(q.answers[0].answerText, 3));\n                    answer = (\n                        <div>\n                            <ul className=\"list-unstyled\">\n                                <li style={{ fontSize: 14 }}><Link style={{ color: 'black' }} to={'profile/' + q.answers[0].createdBy.user_id}>{q.answers[0].createdBy.name},</Link><span style={{ marginLeft: 10 }}>{q.answers[0].createdBy.crediential}</span></li>\n                                <li><small className=\"text-muted\">Answered <Moment fromNow>{q.answers[0].createdOn}</Moment></small></li>\n                            </ul>\n                            <p className=\"comment_truncate\">\n                                {renderHTML(html_truncate(q.answers[0].answerText, 150))}\n                            </p>\n                        </div>\n                    )\n                }*/}\n\n\n                return (\n                    <Card key={idx}>\n                        <Card.Body >\n                            <BadgeGroup data={q.topics} />\n                            <Card.Title style={{ fontWeight: 'bold' }}>{q.content}</Card.Title>\n                            {answer}\n                            <Card.Link as={NavLink} to={'/questions/' + q._id}>more</Card.Link>\n                        </Card.Body>\n                    </Card>\n\n                )\n            });\n        }\n\n        /*\n            main_panel = this.state.questions.map(q => {\n                return (\n        \n                    <Card>\n                        <Card.Body>\n                            <Card.Title>{q.questionText}</Card.Title>\n                            <Card.Text\n                                style={{\n                                    \"overflow\": \"hidden\",\n                                    \"text-overflow\": \"ellipsis\",\n                                    \"display\": \"-webkit-box\",\n                                    \"-webkit-line-clamp\": 3\n                                }}>\n                                {q.top_answer.answerText}\n                            </Card.Text>\n                            <Card.Link as={NavLink} to={'questions/' + q._id}>more</Card.Link>\n                        </Card.Body>\n                    </Card>\n                    \n        \n                )\n            });\n        }\n        else {\n            main_panel = (\n                <div>\n                    What is your question?\n                </div>\n            )\n        }*/\n\n        let modal_Q_Close = () => this.setState({ show_add: false });\n        //let handleReload = () => this.setState({refresh: true},()=>{console.log(this.state.refresh)});\n\n        let redirectVar = null;\n        if (this.props.authentication.loggedIn !== true) {\n            redirectVar = <Redirect to=\"/login\" />\n        }\n        return (\n\n            <div>\n                {redirectVar}\n                <AddModal\n                    show={this.state.show_add}\n                    onHide={modal_Q_Close}\n                    user_name={this.state.user_name}\n                    afteradd={this.afterAdd}\n\n                />\n                {/*}\n                <Container>\n                    <Row style={{ \"margin-top\": 50 }}>\n                        <Col md='auto'>\n                            <Sidebar links={this.state.sidebar_links} />\n                            <Button style={{ 'text-decoration': 'none', \"font-size\": 14, \"line-height\": 10 }} variant=\"link\" onClick={this.selectTopics}>Follow More</Button>\n                        </Col>\n                        <Col> */}\n                <Card>\n                    <Card.Body>\n                        <Card.Title style={{ \"fontSize\": 14, \"color\": 949494 }}>{'Hi, ' + this.state.user_name}</Card.Title>\n                        <Button variant=\"link\" onClick={this.showModal} style={{ 'textDecoration': 'none' }} className=\"add_q_link\">What is your question?</Button>\n                    </Card.Body>\n                </Card>\n\n                <br />\n\n                <Card>\n                    <Card.Header as=\"h6\"><span className=\"fa fa-question\"></span> Questions for You\n                                <Button variant=\"link\" onClick={this.handleReload} style={{ 'textDecoration': 'none' }} className=\"add_q_link\"><span className=\"fa fa-refresh\"></span></Button>\n                    </Card.Header>\n                </Card>\n                {main_panel} {/* </Col>\n                    </Row>\n                </Container>*/}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ authentication }) => ({ authentication });\nexport default connect(mapStateToProps)(Home);","import { Modal, Button, Form } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport AsyncSelect from 'react-select/lib/Async';\nimport axios from 'axios';\nimport _ from \"lodash\";\nimport {david_test_apis, user_tracking_apis, backend_host} from '../../config';\nimport cookie from 'react-cookies';\n\nclass TopicModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTopics: [],\n      options: [],\n      token: cookie.load('JWT')\n    }\n    this.handlePost = this.handlePost.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n    console.log(e.target.name, e.target.value);\n  }\n\n  handlePost = (e) => {\n    e.preventDefault();\n    const ids = this.state.selectedTopics.map(topic => \n        topic._id\n    );\n    console.log(ids);\n    const data = {\n//      action: 'topic',\n      topic_ids: ids,\n      action: 'follow'\n    }\n    console.log(data);\n\n    axios.post(backend_host + '/userTopics', data, {\n      headers: {\n        'Authorization': `Bearer ${this.state.token}`\n      }\n    }).then(response => {\n       this.props.update_sidebar(response.data.followed_topics);\n    }).catch(error => {\n      console.log(error);\n    }); \n\n  }\n\n  componentDidMount() {\n\n  }\n\n  handleSelectChange = (value, { action }) => {\n    console.log(value, action);\n    this.setState({\n      selectedTopics: value\n    })\n  };\n\n\n  getOptions = inputValue => {\n    return axios.get(backend_host + '/topics', {\n      headers: {\n        'Authorization': `Bearer ${this.state.token}`\n      },\n      params: {\n        exclude: true\n       }\n     })\n      .then(response => {\n        //console.log(response.data);\n        //     this.setState({\n        //       options: response.data\n        //     })\n        return response.data\n      }).then(options => {\n        const filtered = _.filter(options, o =>\n          _.startsWith(_.toLower(o.label), _.toLower(inputValue))\n        );\n        return filtered.slice(0, 10);\n      })\n  }\n\n  render() {\n\n    //  const { selectedOption } = this.state;\n\n    return (\n      <Modal\n        {...this.props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            What are your interests?\n            </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n              <Form.Label className=\"text-muted\">Select topics you want to follow</Form.Label>\n              <AsyncSelect\n                isMulti\n                cacheOptions\n                defaultOptions\n                loadOptions={inputValue => this.getOptions(inputValue)}\n                onChange={this.handleSelectChange}\n                getOptionValue={option => option._id}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button style={{ 'color': '#949494', 'textDecoration': 'none', 'fontWeight': 400}} variant=\"link\" onClick={this.props.onHide}>Not now</Button>\n          <Button onClick={this.handlePost}>Done</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n// apply above mapping to Login class\nexport default TopicModal","import React, { Component } from 'react';\nimport './Sidebar.css';\nimport {NavLink, withRouter } from 'react-router-dom';\nimport { Nav,  Button } from 'react-bootstrap';\nimport TopicModal from './TopicModal';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { user_tracking_apis, backend_host} from '../../config'\n\nclass Sidebar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sidebar_links: [],\n//            token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NTY5NDg3NDksImlkIjoiNWNjOTMyN2VmMzYzOTMwMDAxZDkzMzIxIn0.1PyIZ9tVZCH9ihiF8KHTv8McvGlAwhBHor8GGPd7QKc'\n            token: cookie.load('JWT')\n        }\n    }\n\n    selectTopics = (e) => {\n        e.preventDefault();\n        this.setState({\n            show_topics: true\n        })\n    }\n\n    update_sidebar = (followed_topics) =>{\n        this.setState({\n            sidebar_links: followed_topics,\n            show_topics: false\n        })\n    }\n\n    componentDidMount() {\n        //const sidebar_links = [\n        //    { name: \"Movies\", url: \"/topics/movies\" },\n        //    { name: \"Food\", url: \"/topics/food\" }\n        // ];\n        let header = {\n  //          'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': `Bearer ${this.state.token}`\n        }\n        //axios.defaults.withCredentials = true;\n        axios({\n            medthod: 'get',\n            url: backend_host + '/userTopics',\n            headers: header\n        })\n            .then((res) => {\n                if (res.status === 200) {\n//                    console.log(res.data);\n                    this.setState({\n                        sidebar_links: res.data.followed_topics,\n                    });\n                }\n                else if (res.status === 401) {\n                    console.log('Token Error, please login again')\n                }\n            }).catch(err=>{\n                console.log(err);\n            })\n    }\n\n    render() {\n        let sidebar_body = this.state.sidebar_links.map((link,idx) => {\n            return (\n                <Nav.Link key={idx} className=\"sidebar\" as={NavLink} to={'/topics/' + link._id}>{link.label}</Nav.Link>\n            )\n        });\n        let modal_T_Close = () => this.setState({ show_topics: false });\n        return (\n            <div>\n                <TopicModal\n                    show={this.state.show_topics}\n                    onHide={modal_T_Close}\n                    update_sidebar={this.update_sidebar}\n                />\n                <Nav style={{ \"fontSize\": 14, \"lineHeight\": 1.0 }} className=\"flex-column\" >\n                    {sidebar_body}\n                </Nav>\n                <Button style={{ 'textDecoration': 'none', \"fontSize\": 14, \"lineHeight\": 1.0,  'marginLeft': 8 }} variant=\"link\" onClick={this.selectTopics}>Follow More</Button>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Sidebar);","import React from 'react';\n//import { withRouter } from 'react-router-dom';\n//import cookie from 'react-cookies';\nimport { Route } from 'react-router';\n//import './Home.css';\n//import { userActions } from '../../_actions';\n//import { connect } from 'react-redux';\nimport Sidebar from '../Sidebar/Sidebar';\nimport { Container, Col, Row } from 'react-bootstrap';\n\n\nconst SidebarLayout = ({component: Component, ...rest}) => {\n\nreturn(\n            <Route {...rest} render={matchProps => (\n            <div>\n                <Container>\n                    <Row style={{ \"marginTop\": 50 }}>\n                        <Col md='auto'>\n                            <Sidebar/>\n                           {/* <Button style={{ 'text-decoration': 'none', \"font-size\": 14, \"line-height\": 10 }} variant=\"link\" onClick={this.selectTopics}>Follow More</Button>*/}\n                        </Col>\n                        <Col md={9}>\n                            <Component {...matchProps} key={Math.random()*10000+1}></Component>\n                        </Col>\n                    </Row>\n                </Container>\n            </div> \n            )} \n            />\n\n        )\n            };\n\n\nexport default SidebarLayout;","import React, { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport cookie from 'react-cookies';\n//import { Redirect } from 'react-router';\n//import './Navbar.css';\nimport { userActions } from '../../_actions';\nimport { connect } from 'react-redux';\nimport { Navbar, Nav, NavDropdown, Button, InputGroup, Form, ListGroup } from 'react-bootstrap';\nimport { backend_host } from '../../config';\nimport axios from 'axios';\nimport AddModal from './Add_Q_Modal';\n\nimport style from './Navbar.module.css';\n\n//create the Navbar Component\nclass navbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show_add: false,\n            search: {\n                input: \"\",\n                catagory: \"user\"\n            },\n            result_type: \"user\",\n            results: []\n        };\n        this.handleLogout = this.handleLogout.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.afterAdd = this.afterAdd.bind(this);\n    }\n    //handle logout to destroy the cookie\n    handleLogout = () => {\n        this.props.dispatch(userActions.logout());\n        cookie.remove('JWT', { path: '/' });\n    }\n\n    handleAdd = (e) => {\n        e.preventDefault();\n        this.setState({\n            show_add: true,\n            user_name: this.props.authentication.first_name + ' ' + this.props.authentication.last_name,\n        })\n    }\n\n    afterAdd = () => {\n        this.setState({\n            show_add: false\n        })\n    }\n\n    onChangeHandler = (e) => {\n        let search = { ...this.state.search };\n        search[e.target.id] = e.target.value;\n        this.setState({ search });\n    };\n\n    onSearchHandler = (e) => {\n        // /search/{catagory}/{content}\n        if (this.state.search.input !== '')\n            axios.get(`${backend_host}/search/${this.state.search.catagory}/${this.state.search.input}`,\n                {\n                    headers: {\n                        'Authorization': `Bearer ${cookie.load('JWT')}`\n                    }\n                }).then(res => {\n                    console.log(\"Search Result\", res.data);\n                    this.setState({\n                        results: res.data,\n                        show: true,\n                        result_type: this.state.search.catagory\n                    })\n                })\n    }\n\n    onCloseResultHandler = () => {\n        this.setState({\n            results: []\n        })\n    }\n\n    onClickHandler = (id) => {\n        // this.dispatch(userActions.)\n        axios.get(`${backend_host}/profile/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${cookie.load('JWT')}`\n            }\n        }).then(res => {\n            if (res.status === 200) {\n                res.data.user_info.avatar = `${backend_host}/user_avatar/${id}`\n                this.props.dispatch(userActions.profile_update(res.data))\n            }\n        })\n    }\n\n    render() {\n        //if Cookie is set render Logout Button\n\n        const { authentication } = this.props;\n\n        let navLogin = null;\n        if (authentication.loggedIn === true) {\n            //           let userId = cookie.load('userId');\n            //           console.log(\"Able to read cookie\");\n            navLogin = (\n                <NavDropdown title={authentication.first_name} id=\"basic-nav-dropdown\">\n                    <NavDropdown.Item onClick={this.handleLogout}>Logout</NavDropdown.Item>\n                    <NavDropdown.Item as={NavLink} to={`/profile/${this.props.authentication.user_id}`} onClick={()=>this.onClickHandler(this.props.authentication.user_id)}>Profile</NavDropdown.Item>\n                    <NavDropdown.Item as={NavLink} to={`/messages/${this.props.authentication.user_id}`}>Messages</NavDropdown.Item>\n                    <NavDropdown.Item as={NavLink} to={`/content`}>Content</NavDropdown.Item>\n                    <NavDropdown.Item as={NavLink} to={`/stats`}>Stats</NavDropdown.Item>\n                </NavDropdown>\n            );\n        }\n        else {\n            //  Else display login button\n            //          console.log(\"Not Able to read cookie\");\n            navLogin = (\n                <Nav className=\"ml-auto\">\n                    <Nav.Link as={NavLink} to=\"/login\"><span className=\"fa fa-sign-in\"></span> Login</Nav.Link>\n                    <Nav.Link as={NavLink} to=\"/signup\"><span className=\"fa fa-user-plus\"></span> SignUp</Nav.Link>\n                </Nav>\n            )\n        }\n\n        let modalClose = () => this.setState({ show_add: false });\n\n        let addmodal = null;\n        if (this.state.show_add === true) {\n            addmodal = (\n                <AddModal\n                    show={this.state.show_add}\n                    user_name={this.state.user_name}\n                    onHide={modalClose}\n                    afteradd={this.afterAdd}\n                />\n            )\n        }\n        return (\n\n            <Navbar bg=\"light\" expand=\"md\">\n                <Navbar.Brand>\n                    <Link to='/' style={{ color: 'red', 'textDecoration': 'none' }}>QUORA</Link>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link as={NavLink} to=\"/\"><span className=\"fa fa-home\"></span> Home</Nav.Link>\n                    </Nav>\n\n                    <Nav className=\"ml-auto\" style={{ position: \"relative\" }}>\n                        {/* <Form inline>\n                            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                            <Button variant=\"outline-success\">Search</Button>\n                        </Form> */}\n                        <InputGroup>\n                            <Form.Control\n                                placeholder=\"Search\"\n                                aria-label=\"Search\"\n                                aria-describedby=\"basic-addon2\"\n                                value={this.state.search.input}\n                                id=\"input\"\n                                onChange={this.onChangeHandler}\n                            />\n                            <InputGroup.Append>\n                                <Form.Control as=\"select\" value={this.state.search.catagory} id=\"catagory\" onChange={this.onChangeHandler}>\n                                    <option value=\"user\">User</option>\n                                    <option value=\"question\">Question</option>\n                                    <option value=\"topic\">Topic</option>\n                                </Form.Control>\n                                <Button variant=\"outline-secondary\" onClick={this.onSearchHandler}>Search</Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n\n                        {\n                            this.state.results.length > 0 ?\n                                <ListGroup className={style.search_result}>\n                                    {this.state.results.map(res => {\n\n                                        let content;\n\n                                        if (this.state.search.catagory === 'user') {\n                                            content = (\n                                                <Link to={`/profile/${res._id}`} onClick={() => this.onClickHandler(res._id)} >{res.email}</Link>\n                                            )\n                                        } else if (this.state.search.catagory === 'topic') {\n                                            content = (\n                                                <Link to={`/topics/${res._id}`} >{res.label}</Link>\n                                            )\n                                        } else if (this.state.search.catagory === 'question') {\n                                            content = (\n                                                <Link to={`/questions/${res._id}`} >{res.content}</Link>\n                                            )\n                                        }\n\n                                        return (\n                                            <ListGroup.Item key={res._id} onClick={this.onCloseResultHandler}>\n                                                {content}\n                                            </ListGroup.Item>\n                                        )\n                                    })}\n                                    <ListGroup.Item>\n                                        <Button variant=\"link\" onClick={this.onCloseResultHandler}>Close</Button>\n                                    </ListGroup.Item>\n                                </ListGroup> : null\n                        }\n\n                    </Nav>\n                    {navLogin}\n\n                    <Button variant=\"danger\"\n                        disabled={!authentication.loggedIn}\n                        onClick={this.handleAdd}\n                        /*{authentication.loggedIn ? this.handleAdd : null}*/>Add Question</Button>\n                </Navbar.Collapse>\n\n                {addmodal}\n\n            </Navbar>\n        )\n    }\n}\n\n//export default Navbar;\nconst mapStateToProps = ({ authentication }) => ({ authentication });\n// apply above mapping to Login class\nexport default connect(mapStateToProps)(navbar);","import React, { Component } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport './TopicPage.css';\n//import { userActions } from '../../_actions';\nimport { connect } from 'react-redux';\nimport { Card, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { david_test_apis, backend_host } from '../../config';\nimport renderHTML from 'react-render-html';\nimport Moment from 'react-moment';\nimport { BadgeGroup } from '../QuestionPage/QuestionPage'\n//import { throws } from 'assert';\n\nvar html_truncate = require('html-truncate');\n\nclass TopicPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            questions: [],\n            user_name: this.props.authentication.first_name + ' ' + this.props.authentication.last_name,\n            topic: this.props.match.params.topic,\n            token: cookie.load('JWT')\n        }\n    }\n\n    componentDidMount() {\n        axios.get(backend_host + '/topics/' + this.state.topic + '/questions', {\n            headers: {\n                'Authorization': `Bearer ${this.state.token}`\n            },\n            //           params: {\n            //               topic: this.state.topic,\n            //               topAnswer: true,\n            //               depth: 1,\n            //           }\n        }).then(response => {\n            //console.log(response.data);\n            this.setState({\n                questions: response.data.questions,\n                followers: response.data.followers,\n                topic: response.data.label,\n                followed: response.data.followed\n\n\n            })\n\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    render() {\n\n        let main_panel = null;\n        let redirectVar = null;\n        if (this.props.authentication.loggedIn !== true) {\n            redirectVar = <Redirect to=\"/login\" />\n        }\n\n        if (this.state.questions.length !== 0) {\n            main_panel = this.state.questions.map((q, idx) => {\n                let answer = null;\n\n                if ('answers' in q && q.answers.length !== 0) {\n\n                    let creator = (<ul className=\"list-unstyled\">\n                    <li style={{ fontSize: 14 }}><Link style={{ color: 'black' }} to={'/profile/' +  q.answers[0].owner._id}>{q.answers[0].owner.user_info.first_name} {q.answers[0].owner.user_info.last_name},</Link><span style={{ marginLeft: 10 }}>{q.answers[0].owner.user_info.profileCredential}</span></li>\n                    <li><small className=\"text-muted\">Answered <Moment fromNow>{q.answers[0].time}</Moment></small></li>\n                </ul>)\n\n                if (q.answers[0].anonymous === true) {\n                    creator = (<ul className=\"list-unstyled\">\n                        <li style={{ fontSize: 14 }}>Anonymous User</li>\n                        <li><small className=\"text-muted\">Answered <Moment fromNow>{q.answers[0].time}</Moment></small></li>\n                    </ul>)\n                }\n                    //console.log(html_truncate(q.answers[0].answerText, 3));\n                    answer = (\n                        <div>\n                            {creator}\n                            {/*\n                            <ul className=\"list-unstyled\">\n                                <li style={{ fontSize: 14 }}><Link style={{ color: 'black' }} to={'/profile/' + q.answers[0].owner._id}>{q.answers[0].owner.user_info.first_name} {q.answers[0].owner.user_info.last_name},</Link><span style={{ marginLeft: 10 }}>{q.answers[0].owner.user_info.profileCredential}</span></li>\n                                <li><small className=\"text-muted\">Answered <Moment fromNow>{q.answers[0].time}</Moment></small></li>\n                            </ul>\n                            */}\n                            <div className=\"comment_truncate\">\n                                {renderHTML(html_truncate(q.answers[0].content, 150))}\n                            </div>\n                        </div>\n                    )\n                }\n                else {\n                    answer = <p>Be the first to answer this question! </p>\n                }\n                return (\n                    <Card key={idx}>\n                        <Card.Body >\n                            <BadgeGroup data={q.topics} />\n                            <Card.Title style={{ fontWeight: 'bold' }}>{q.content}</Card.Title>\n                            {/*<Card.Text >*/}\n                                {answer}\n                            {/*</Card.Text>*/}\n                            <Card.Link as={NavLink} to={'/questions/' + q._id}>more</Card.Link>\n                        </Card.Body>\n                    </Card>\n\n                )\n            });\n        }\n        else {\n            main_panel = (\n                <div>\n                    What is your question?\n                </div>\n            )\n        }\n\n\n        return (\n\n            <div>\n                {redirectVar}\n                <Card>\n                    <Card.Body style={{ \"fontSize\": 20, \"color\": '#666', 'fontWeight': 'bold' }}>\n                        {this.state.topic}\n                        <br />\n                        <Button variant=\"link\" onClick={this.handleFollow} disabled={this.state.followed}>\n                            <span className=\"fa fa-plus-square\"></span> {this.state.followed ? 'Followed' : 'Follow'}  ·  {this.state.followers}</Button>\n                    </Card.Body>\n                </Card>\n                <br />\n                {main_panel}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ authentication }) => ({ authentication });\nexport default connect(mapStateToProps)(TopicPage);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button, Row, Col, ListGroup, Card } from 'react-bootstrap';\nimport { userActions } from '../../../../_actions';\nimport { backend_host } from '../../../../config';\nimport cookie from 'react-cookies';\nimport axios from 'axios';\n\nimport style from '../../Profile.module.css';\n\nconst educations = () => {\n    return {\n        school: '',\n        concentration: '',\n        secondaryConcentration: '',\n        degreeType: '',\n        graduationYear: ''\n    };\n}\n\nconst careers = () => {\n    return {\n        position: '',\n        company: '',\n        starYear: '',\n        endYear: ''\n    }\n}\n\nconst schemas = {\n    educations: educations,\n    careers: careers\n}\n\nclass ProfileContent extends Component {\n\n    state = {\n        editing_profile: false,\n        city: '',\n        state: '',\n        zipCode: '',\n        educations: [],\n        careers: []\n    }\n\n    onEditProfileHandler = () => {\n\n        let new_state = {\n            editing_profile: !this.state.editing_profile\n        }\n\n        if (!this.state.editing_profile) {\n            new_state = {\n                ...new_state,\n                city: this.props.profile.user_info.city,\n                state: this.props.profile.user_info.state,\n                zipCode: this.props.profile.user_info.zipCode,\n                educations: this.props.profile.user_info.educations,\n                careers: this.props.profile.user_info.careers\n            }\n        }\n\n        this.setState(new_state);\n    }\n\n    onSaveProfileHandler = () => {\n        console.log(\"Profile update\", this.state);\n\n        let payload = {\n            ...this.state\n        };\n        delete payload.editing_profile;\n        this.props.dispatch(userActions.profile_update({ user_info: payload }));\n\n        let data = {\n            ...this.props.profile.user_info,\n            ...payload\n        }\n\n        axios.put(`${backend_host}/profile/update_info`, data,\n            {\n                headers: {\n                    'Authorization': `Bearer ${cookie.load('JWT')}`\n                }\n            }).then(res => {\n                console.log(\"Update Profile\", res)\n            })\n\n        this.setState({\n            editing_profile: false\n        })\n    }\n\n    onAddHandler = (key) => {\n        let new_state = {\n            ...this.state\n        };\n        new_state[key].push(schemas[key]())\n        this.setState(new_state);\n    }\n\n    onChangeHandler = (e) => {\n        this.setState({ [e.target.id]: e.target.value });\n        console.log(e.target.value)\n        console.log(this.state)\n    };\n\n    onNewItemHandler = (e, type, index, field) => {\n        let new_items = [...this.state[type]];\n        new_items[index][field] = e.target.value;\n        this.setState({\n            [type]: new_items\n        })\n    }\n\n    render() {\n\n        const profile_display = (\n            <div>\n                <p>{`Email: ${this.props.profile.user_info.email}`}</p>\n                <p>{`City: ${this.props.profile.user_info.city}`}</p>\n                <p>{`State: ${this.props.profile.user_info.state}`}</p>\n                <p>{`ZipCode: ${this.props.profile.user_info.zipCode}`}</p>\n                <hr />\n                <h3>Educations</h3>\n                {this.props.profile.user_info.educations.map((edu, index) => {\n                    return (\n                        <div key={index}>\n                            <ListGroup>\n                                <ListGroup.Item>\n                                    School: {edu.school}\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    Concentration: {edu.concentration}\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    Secondary Concentration: {edu.secondaryConcentration}\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    Degree Type: {edu.degreeType}\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    Graduation Year: {edu.graduationYear}\n                                </ListGroup.Item>\n                            </ListGroup>\n                            <br />\n                        </div>\n\n                    )\n                })}\n\n                <h3>Careers</h3>\n                {this.props.profile.user_info.careers.map((career, index) => {\n                    return (\n                        <div key={index}>\n                            <ListGroup>\n                                <ListGroup.Item>\n                                    Position: {career.position}\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    Company: {career.company}\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    Star Year: {career.starYear}\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    End Year: {career.endYear}\n                                </ListGroup.Item>\n                            </ListGroup>\n                            <br />\n                        </div>\n                    )\n                })}\n                {this.props.authentication.user_id === this.props.match.params.uid ? <Button onClick={this.onEditProfileHandler}>Edit</Button> : null}\n            </div>\n        )\n\n        const profile_edit = (\n            <div>\n                <p>{`Email: ${this.props.profile.user_info.email}`}</p>\n                <Form>\n                    <Form.Group controlId=\"city\" as={Row}>\n                        <Form.Label column sm=\"3\">City:</Form.Label>\n                        <Col>\n                            <Form.Control type=\"text\" placeholder=\"City\" value={this.state.city} onChange={this.onChangeHandler} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group controlId=\"state\" as={Row}>\n                        <Form.Label column sm=\"3\">State:</Form.Label>\n                        <Col>\n                            <Form.Control type=\"text\" placeholder=\"State\" value={this.state.state} onChange={this.onChangeHandler} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group controlId=\"zipCode\" as={Row}>\n                        <Form.Label column sm=\"3\">Zip Code:</Form.Label>\n                        <Col>\n                            <Form.Control type=\"text\" placeholder=\"Zip Code\" value={this.state.zipCode} onChange={this.onChangeHandler} />\n                        </Col>\n                    </Form.Group>\n                    <hr />\n                    <h3>Educations</h3>\n                    {\n                        this.state.educations.map((edu, index) => {\n                            return (\n                                <div key={index}>\n                                    <Card>\n                                        <Card.Header>New Education</Card.Header>\n                                        <Card.Body>\n                                            <Form.Group controlId={\"school\" + index} as={Row}>\n                                                <Form.Label column sm=\"6\">School:</Form.Label>\n                                                <Col>\n                                                    <Form.Control type=\"text\" placeholder=\"School\" value={edu.school} onChange={e => this.onNewItemHandler(e, \"educations\", index, \"school\")} />\n                                                </Col>\n                                            </Form.Group>\n                                            <Form.Group controlId={\"concentration\" + index} as={Row}>\n                                                <Form.Label column sm=\"6\">Concentration:</Form.Label>\n                                                <Col>\n                                                    <Form.Control type=\"text\" placeholder=\"Concentration\" value={edu.concentration} onChange={e => this.onNewItemHandler(e, \"educations\", index, \"concentration\")} />\n                                                </Col>\n                                            </Form.Group>\n                                            <Form.Group controlId={\"secondaryConcentration\" + index} as={Row}>\n                                                <Form.Label column sm=\"6\">Secondary Concentration:</Form.Label>\n                                                <Col>\n                                                    <Form.Control type=\"text\" placeholder=\"Secondary Concentration\" value={edu.secondaryConcentration} onChange={e => this.onNewItemHandler(e, \"educations\", index, \"secondaryConcentration\")} />\n                                                </Col>\n                                            </Form.Group>\n                                            <Form.Group controlId={\"degreeType\" + index} as={Row}>\n                                                <Form.Label column sm=\"6\">Degree Type:</Form.Label>\n                                                <Col>\n                                                    <Form.Control type=\"text\" placeholder=\"Degree Type\" value={edu.degreeType} onChange={e => this.onNewItemHandler(e, \"educations\", index, \"degreeType\")} />\n                                                </Col>\n                                            </Form.Group>\n                                            <Form.Group controlId={\"graduationYear\" + index} as={Row}>\n                                                <Form.Label column sm=\"6\">Graduation Year:</Form.Label>\n                                                <Col>\n                                                    <Form.Control type=\"text\" placeholder=\"Graduation Year\" value={edu.graduationYear} onChange={e => this.onNewItemHandler(e, \"educations\", index, \"graduationYear\")} />\n                                                </Col>\n                                            </Form.Group>\n                                        </Card.Body>\n                                    </Card>\n                                    <br />\n                                </div>\n                            )\n                        })\n                    }\n\n                    <Button onClick={() => this.onAddHandler('educations')}>Add</Button>\n\n\n                    <hr />\n                    <h3>Careers</h3>\n\n                    {\n                        this.state.careers.map((career, index) => {\n                            return (\n                                <div key={index}>\n                                    <Card>\n                                        <Card.Header>New Career</Card.Header>\n                                        <Card.Body>\n                                            <Form.Group controlId={\"position\" + index} as={Row}>\n                                                <Form.Label column sm=\"3\">Position:</Form.Label>\n                                                <Col>\n                                                    <Form.Control type=\"text\" placeholder=\"Position\" value={career.position} onChange={e => this.onNewItemHandler(e, \"careers\", index, \"position\")} />\n                                                </Col>\n                                            </Form.Group>\n                                            <Form.Group controlId={\"company\" + index} as={Row}>\n                                                <Form.Label column sm=\"3\">Company:</Form.Label>\n                                                <Col>\n                                                    <Form.Control type=\"text\" placeholder=\"Company\" value={career.company} onChange={e => this.onNewItemHandler(e, \"careers\", index, \"company\")} />\n                                                </Col>\n                                            </Form.Group>\n                                            <Form.Group controlId={\"starYear\" + index} as={Row}>\n                                                <Form.Label column sm=\"3\">Star Year:</Form.Label>\n                                                <Col>\n                                                    <Form.Control type=\"text\" placeholder=\"Star Year\" value={career.starYear} onChange={e => this.onNewItemHandler(e, \"careers\", index, \"starYear\")} />\n                                                </Col>\n                                            </Form.Group>\n                                            <Form.Group controlId={\"endYear\" + index} as={Row}>\n                                                <Form.Label column sm=\"3\">End Year:</Form.Label>\n                                                <Col>\n                                                    <Form.Control type=\"text\" placeholder=\"End Year\" value={career.endYear} onChange={e => this.onNewItemHandler(e, \"careers\", index, \"endYear\")} />\n                                                </Col>\n                                            </Form.Group>\n                                        </Card.Body>\n                                    </Card>\n                                    <br />\n                                </div>\n                            )\n                        })\n                    }\n                    <Button onClick={() => this.onAddHandler('careers')}>Add</Button>\n                    <hr />\n\n                    <Button onClick={this.onSaveProfileHandler}>Save</Button>&nbsp;\n                    <Button onClick={this.onEditProfileHandler}>Cancel</Button>\n                </Form>\n            </div>\n        )\n\n        return (\n            <React.Fragment>\n                <h3 className={style.contentTitle}>\n                    Profile\n                </h3>\n                {this.state.editing_profile ? profile_edit : profile_display}\n            </React.Fragment>\n        )\n    }\n}\n\n// reducer: profile 's output maps to this.props.profile\nconst mapStateToProps = ({ authentication, profile }) => ({ authentication, profile });\n// apply above mapping to Login class\nexport default connect(mapStateToProps)(ProfileContent);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Nav, ListGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport style from '../../Profile.module.css'\n\nclass AnswersContent extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <h3 className={style.contentTitle}>\n                    Answers\n                </h3>\n                <ListGroup>\n                    <h5>Created Answers</h5>\n                    {this.props.profile.created_answers.map((a, index) => {\n                        return (\n                            <ListGroup.Item key={\"created\" + a._id}>\n                                <Link to={`/questions/${a.question_id._id}`}>Answer to: {a.question_id.content}</Link>\n                            </ListGroup.Item>\n                        )\n                    })}\n                    <br />\n                    <h5>Bookmarked Answers</h5>\n                    {this.props.profile.bookmarked_answers.map((a, index) => {\n                        return (\n                            <ListGroup.Item key={\"bookmarked\" + a._id}>\n                                <Link to={`/questions/${a.question_id._id}`}>Answer to: {a.question_id.content}</Link>\n                            </ListGroup.Item>\n                        )\n                    })}\n                </ListGroup>\n            </React.Fragment>\n        )\n    }\n}\n\n// reducer: profile 's output maps to this.props.profile\nconst mapStateToProps = ({ profile }) => ({ profile });\n// apply above mapping to Login class\nexport default connect(mapStateToProps)(AnswersContent);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Nav, ListGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport style from '../../Profile.module.css'\n\nclass QuestionsContent extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <h3 className={style.contentTitle}>\n                    Questions\n                </h3>\n                <ListGroup>\n                    {this.props.profile.created_questions.map((q, index) => {\n                        return (\n                            <ListGroup.Item key={q._id}>\n                                <Link to={`/questions/${q._id}`}>{q.content}</Link>\n                            </ListGroup.Item>\n                        )\n                    })}\n                </ListGroup>\n            </React.Fragment>\n        )\n    }\n}\n\n// reducer: profile 's output maps to this.props.profile\nconst mapStateToProps = ({ profile }) => ({ profile });\n// apply above mapping to Login class\nexport default connect(mapStateToProps)(QuestionsContent);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Nav, ListGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { userActions } from '../../../../_actions';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { backend_host } from '../../../../config';\nimport style from '../../Profile.module.css'\n\nclass FollowersContent extends Component {\n\n    onClickHandler = (id) => {\n        // this.dispatch(userActions.)\n        axios.get(`${backend_host}/profile/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${cookie.load('JWT')}`\n            }\n        }).then(res => {\n            if (res.status === 200) {\n                res.data.user_info.avatar = `${backend_host}/user_avatar/${id}`\n                this.props.dispatch(userActions.profile_update(res.data))\n            }\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <h3 className={style.contentTitle}>\n                Followers\n                </h3>\n                <ListGroup>\n                    {this.props.profile.following_people.map((p, index) => {\n                        return (\n                            <ListGroup.Item key={p._id} onClick={() => this.onClickHandler(p._id)}>\n                                <Link to={`/profile/${p._id}`}>{`${p.user_info.first_name} ${p.user_info.last_name}`}</Link>\n                            </ListGroup.Item>\n                        )\n                    })}\n                </ListGroup>\n            </React.Fragment>\n        )\n    }\n}\n\n// reducer: profile 's output maps to this.props.profile\nconst mapStateToProps = ({ profile }) => ({ profile });\n// apply above mapping to Login class\nexport default connect(mapStateToProps)(FollowersContent);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Nav, ListGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { userActions } from '../../../../_actions';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { backend_host } from '../../../../config';\n\nimport style from '../../Profile.module.css'\n\nclass FollowingContent extends Component {\n\n    onClickHandler = (id) => {\n        // this.dispatch(userActions.)\n        axios.get(`${backend_host}/profile/${id}`, {\n            headers: {\n                'Authorization': `Bearer ${cookie.load('JWT')}`\n            }\n        }).then(res => {\n            if (res.status === 200) {\n                res.data.user_info.avatar = `${backend_host}/user_avatar/${id}`\n                this.props.dispatch(userActions.profile_update(res.data))\n            }\n        })\n    }\n\n    render() {\n\n        console.log(\"following\", this.props.profile)\n        return (\n            <React.Fragment>\n                <h3 className={style.contentTitle}>\n                    Followings\n                </h3>\n                <ListGroup>\n                    {this.props.profile.followed_people.map((p, index) => {\n                        return (\n                            <ListGroup.Item key={p._id} onClick={() => this.onClickHandler(p._id)}>\n                                <Link to={`/profile/${p._id}`}>{`${p.user_info.first_name} ${p.user_info.last_name}`}</Link>\n                            </ListGroup.Item>\n                        )\n                    })}\n                </ListGroup>\n            </React.Fragment>\n        )\n    }\n}\n\n// reducer: profile 's output maps to this.props.profile\nconst mapStateToProps = ({ profile }) => ({ profile });\n// apply above mapping to Login class\nexport default connect(mapStateToProps)(FollowingContent);","import React, { Component } from 'react';\nimport { Route, Redirect, Switch } from \"react-router-dom\";\n\nimport ProfileContent from './ProfileContent/ProfileContent';\nimport AnswersContent from './AnswersContent/AnswersContent';\nimport QuestionsContent from './QuestionsContent/QuestionsContent';\nimport FollowersContent from './FollowersContent/FollowersContent';\nimport FollowingContent from './FollowingContent/FollowingContent';\n\nclass Content extends Component {\n\n    render() {\n        return (\n            // props => <ProfileContent {...props} />\n            <React.Fragment>\n                <Route path='/profile/:uid/' exact component={ProfileContent} />\n                <Route path='/profile/:uid/answers' exact component={AnswersContent} />\n                <Route path='/profile/:uid/questions' exact component={QuestionsContent} />\n                <Route path='/profile/:uid/followers' exact component={FollowersContent} />\n                <Route path='/profile/:uid/following' exact component={FollowingContent} />\n            </React.Fragment>\n\n        )\n    }\n}\n\nexport default Content;","import React, { Component } from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { userActions } from '../../../_actions';\n\nimport style from '../Profile.module.css';\n\nclass Sidebar extends Component {\n\n    render(){\n        console.log(\"Profile Sidebar uid\", this.props.uid);\n        return (\n            <Nav className=\"flex-column\" variant=\"pills\">\n                <h3 className={style.contentTitle}>\n                    <div>\n                        Feeds\n                </div>\n                </h3>\n                <NavLink to={`/profile/${this.props.uid}`} className=\"nav-link\" exact>\n                    Profile\n            </NavLink>\n                <NavLink to={`/profile/${this.props.uid}/answers`} className=\"nav-link\">\n                    Answers\n            </NavLink>\n                <NavLink to={`/profile/${this.props.uid}/questions`} className=\"nav-link\">\n                    Questions\n            </NavLink>\n                <NavLink to={`/profile/${this.props.uid}/followers`} className=\"nav-link\">\n                    Followers\n            </NavLink>\n                <NavLink to={`/profile/${this.props.uid}/following`} className=\"nav-link\">\n                    Following\n            </NavLink>\n\n            </Nav>\n        )\n    }\n\n}\n\n\n// reducer: profile 's output maps to this.props.profile\nconst mapStateToProps = ({ authentication }) => ({ authentication });\n// apply above mapping to Login class\nexport default connect(mapStateToProps)(Sidebar);","import React, { Component } from 'react';\nimport style from './Profile.module.css';\nimport { Container, Col, Row, Image, Modal, Button, Form } from 'react-bootstrap';\nimport moment from 'moment';\nimport Content from './Content/Content'\nimport Sidebar from './Sidebar/Sidebar';\nimport { connect } from 'react-redux';\nimport { userActions } from '../../_actions';\nimport cookie from 'react-cookies';\nimport { backend_host } from '../../config';\n\n\nimport axios from 'axios';\n\nclass Profile extends Component {\n\n    state = {\n        // Upload New Avatar\n        imageSrc: `${backend_host}/user_avatar/${this.props.match.params.uid}`,\n        imageHash: Date.now(),\n        show_edit_image: false,\n        show_image_uploader: false,\n        selectedFile: null,\n        loaded: 0,\n        // Update Profile Info\n        editing_profile: false,\n        new_first_name: \"\",\n        new_first_name: \"\",\n        new_last_name: \"\",\n        new_profileCredential: \"\",\n        new_about: \"\"\n    };\n\n    componentDidMount() {\n        axios.get(`${backend_host}/profile/${this.props.match.params.uid}`, {\n            headers: {\n                'Authorization': `Bearer ${cookie.load('JWT')}`\n            }\n        }).then(res => {\n            if (res.status === 200) {\n                res.data.user_info.avatar = `${backend_host}/user_avatar/${this.props.match.params.uid}`\n                this.props.dispatch(userActions.profile_update(res.data))\n            }\n        })\n\n    }\n\n    onOpenImageUploaderHandler = () => {\n        this.setState({\n            show_image_uploader: true\n        })\n    }\n\n    onCloseImageUploaderHandler = () => {\n        this.setState({\n            show_image_uploader: false\n        })\n    }\n\n    handleselectedFile = event => {\n        this.setState({\n            selectedFile: event.target.files[0],\n            loaded: 0,\n        })\n    }\n\n    handleUpload = () => {\n        if (!this.state.selectedFile) return;\n        const data = new FormData()\n        data.append('avatar', this.state.selectedFile, this.state.selectedFile.name)\n        console.log(data);\n        // TODO\n        axios\n            .post(`${backend_host}/user_avatar/${this.props.match.params.uid}`, data, {\n                headers: {\n                    'Authorization': `Bearer ${cookie.load('JWT')}`\n                },\n                onUploadProgress: ProgressEvent => {\n                    this.setState({\n                        loaded: (ProgressEvent.loaded / ProgressEvent.total * 100),\n                    })\n                },\n            })\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    imageSrc: `${backend_host}/user_avatar/${this.props.match.params.uid}`,\n                    imageHash: Date.now()\n                })\n                this.props.dispatch(userActions.profile_update({ user_info: { avatar: `${backend_host}/user_avatar/${this.props.match.params.uid}` } }));\n\n            })\n    }\n\n    onEditProfileHandler = () => {\n        this.setState({\n            editing_profile: true,\n            new_first_name: this.props.profile.user_info.first_name,\n            new_last_name: this.props.profile.user_info.last_name,\n            new_profileCredential: this.props.profile.user_info.profileCredential,\n            new_about: this.props.profile.user_info.about\n        })\n    }\n\n    onDeactiveHandler = () => {\n        axios.put(`${backend_host}/deactive`, null, {\n            headers: {\n                'Authorization': `Bearer ${cookie.load('JWT')}`\n            }\n        }).then(res => {\n            console.log(res);\n            this.props.dispatch(userActions.logout());\n            cookie.remove('JWT', { path: '/' });\n        })\n    }\n\n    onCancelEditProfileHandler = () => {\n        this.setState({\n            editing_profile: false\n        })\n    }\n\n    onSaveEditProfileHandler = () => {\n\n        let new_user_info = {\n            avatar: this.props.profile.user_info.avatar,\n            first_name: this.state.new_first_name,\n            last_name: this.state.new_last_name,\n            profileCredential: this.state.new_profileCredential,\n            about: this.state.new_about,\n        }\n\n        console.log(\"Before dispatch\", new_user_info);\n\n\n\n        this.props.dispatch(userActions.profile_update({ user_info: new_user_info }));\n\n        console.log(\"new profile\", this.props.profile.user_info);\n\n        let data = {\n            ...this.props.profile.user_info,\n            ...new_user_info\n        }\n\n        axios.put(`${backend_host}/profile/update_info`, data,\n            {\n                headers: {\n                    'Authorization': `Bearer ${cookie.load('JWT')}`\n                }\n            }).then(res => {\n                console.log(\"Update Profile\", res)\n            })\n\n        this.setState({\n            editing_profile: false,\n        });\n    }\n\n    onChangeHandler = (e) => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onChangeFollowHandler = () => {\n        if (this.props.profile.followed) {\n            axios.put(`${backend_host}/unfollow_user/${this.props.match.params.uid}`, null,\n                {\n                    headers: {\n                        'Authorization': `Bearer ${cookie.load('JWT')}`\n                    }\n                }).then(res => {\n                    console.log(\"Unfollow user\", res)\n                    let new_profile = {\n                        ...this.props.profile,\n                        followed: false\n                    }\n                    this.props.dispatch(userActions.profile_update(new_profile));\n                })\n        } else {\n            axios.put(`${backend_host}/follow_user/${this.props.match.params.uid}`, null,\n                {\n                    headers: {\n                        'Authorization': `Bearer ${cookie.load('JWT')}`\n                    }\n                }).then(res => {\n                    console.log(\"follow user\", res);\n                    let new_profile = {\n                        ...this.props.profile,\n                        followed: true\n                    }\n                    this.props.dispatch(userActions.profile_update(new_profile));\n                })\n        }\n    }\n\n    render() {\n\n        let profile_content = (\n            <div>\n                <h1>{this.props.profile.user_info.first_name}&nbsp;{this.props.profile.user_info.last_name}</h1>\n                <p>{this.props.profile.user_info.profileCredential}</p>\n                <p>{this.props.profile.user_info.about}</p>\n                {this.props.authentication.user_id === this.props.match.params.uid ? (\n                    <div>\n                        <Button onClick={this.onEditProfileHandler}>Edit</Button>\n                        &nbsp;\n                        <Button onClick={this.onDeactiveHandler} variant=\"danger\" >Deactive</Button>\n                    </div>\n                ) : <Button variant=\"link\" onClick={this.onChangeFollowHandler}><span className=\"fa fa-plus-square\"></span>&nbsp;{this.props.profile.followed ? 'Unfollow' : 'Follow'}</Button>}\n            </div>\n        )\n\n        let profile_edit = (\n            <div>\n                <Form>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"new_first_name\">\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"First Name\" value={this.state.new_first_name} onChange={this.onChangeHandler} />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"new_last_name\">\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Last Name\" value={this.state.new_last_name} onChange={this.onChangeHandler} />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Group controlId=\"new_profileCredential\">\n                        <Form.Label>Profile Credential</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Profile Credential\" value={this.state.new_profileCredential} onChange={this.onChangeHandler} />\n                    </Form.Group>\n                    <Form.Group controlId=\"new_about\">\n                        <Form.Label>About</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"About\" value={this.state.new_about} onChange={this.onChangeHandler} />\n                    </Form.Group>\n\n                    <Button onClick={this.onCancelEditProfileHandler} className={style.marginRight}>Cancel</Button>\n                    <Button onClick={this.onSaveEditProfileHandler}>Save</Button>\n\n                </Form>\n            </div>\n        )\n        console.log(\"image src\", `${this.props.profile.user_info.avatar}?${Date.now()}`)\n        return (\n            <React.Fragment>\n                {\n                    this.props.profile.active ?\n                        <Container>\n                            <Row>\n                                <Col className={style.center}>\n                                    <div className={style.profile_photo_image_wrapper} onMouseEnter={() => this.setState({ show_edit_image: true })} onMouseLeave={() => this.setState({ show_edit_image: false })}>\n                                        <Image className={style.profile_photo_image} src={`${this.props.profile.user_info.avatar}?${Date.now()}`} roundedCircle />\n                                        {this.state.show_edit_image ? <span className={style.edit_text} onClick={this.onOpenImageUploaderHandler}>Edit</span> : null}\n                                        {/* <span className={style.edit_text} onClick={this.onOpenImageUploaderHandler}>Edit</span> */}\n                                    </div>\n                                </Col>\n                                <Col xs={8}>\n                                    {this.state.editing_profile ? profile_edit : profile_content}\n                                </Col>\n                            </Row>\n                            <hr />\n\n                            <Row>\n                                <Col>\n                                    <Sidebar uid={this.props.match.params.uid} />\n                                </Col>\n                                <Col xs={8}>\n                                    <Content uid={this.props.match.params.uid} />\n                                </Col>\n                            </Row>\n\n\n                            <Modal show={this.state.show_image_uploader} onHide={this.onCloseImageUploaderHandler}>\n                                <Modal.Header closeButton>\n                                    <Modal.Title>Modal heading</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body>\n                                    <Form.Control type=\"file\" onChange={this.handleselectedFile} />\n                                    <br />\n                                    <div> {Math.round(this.state.loaded, 2)} %</div>\n                                </Modal.Body>\n                                <Modal.Footer>\n                                    <Button variant=\"secondary\" onClick={this.onCloseImageUploaderHandler}>\n                                        Close\n                            </Button>\n                                    <Button variant=\"primary\" onClick={this.handleUpload}>\n                                        Save Changes\n                            </Button>\n                                </Modal.Footer>\n                            </Modal>\n\n                        </Container>\n                        :\n                        <Container>\n                            <h1>User Not Found</h1>\n                        </Container>\n                }\n            </React.Fragment>\n        )\n    }\n\n\n\n}\n\n// reducer: profile 's output maps to this.props.profile.user_info\nconst mapStateToProps = ({ authentication, profile }) => ({ authentication, profile });\n// apply above mapping to Login class\nexport default connect(mapStateToProps)(Profile);","import React, { Component } from 'react';\nimport { Container, Row, Button, Form, Card, Pagination, Modal } from 'react-bootstrap';\nimport cookie from 'react-cookies';\nimport axios from 'axios';\nimport {backend_host} from '../../config'\n\nclass Messages extends Component {\n\n    state = {\n        showInbox: false,\n        sendMsg: false,\n        newMsg: {\n            to_email: '',\n            subject: '',\n            content: ''\n        },\n        messages: [],\n        errMsg: '',\n        active: 1\n    }\n\n    componentDidMount() {\n        this.loadInbox();\n    }\n\n    loadInbox = () => {\n        axios.get(backend_host + '/message', {\n            headers: {\n                'Authorization': `Bearer ${cookie.load('JWT')}`\n            }\n        })\n            .then((res) => {\n                console.log(\"msg:\", res.data);\n                this.setState({\n                    messages: res.data\n                })\n            })\n    }\n\n    onInboxClickHandler = () => {\n        this.setState({\n            showInbox: !this.state.showInbox\n        })\n    }\n\n    onNewMsgClickHandler = () => {\n        this.setState({\n            sendMsg: !this.state.sendMsg,\n            errMsg: ''\n        })\n    }\n\n    onChangeHandler = (e) => {\n        let newMsg = { ...this.state.newMsg };\n        newMsg[e.target.id] = e.target.value;\n        this.setState({ newMsg });\n    };\n\n    sendNewMsg = () => {\n        console.log(\"to:\", this.state.newMsg.to_email, \"content:\", this.state.newMsg.content)\n        axios.post(backend_host + '/message', this.state.newMsg, {\n            headers: {\n                'Authorization': `Bearer ${cookie.load('JWT')}`\n            }\n        })\n            .then((res) => {\n                console.log(\"adfasdf\",res)\n                if (res.status === 200) {\n                    this.setState({\n                        errMsg: 'Sent!'\n                    });\n                } else {\n                    this.setState({\n                        errMsg: 'Failed!'\n                    });\n                }\n            })\n    }\n\n    onChangePageHandler = (num) => {\n        this.setState({\n            active: num\n        })\n    }\n\n    render() {\n\n        let new_message = (\n            <React.Fragment>\n                <h2>New Message</h2>\n                <Form>\n                    <Form.Group controlId=\"to_email\">\n                        <Form.Label>To Email:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"To Email\" onChange={this.onChangeHandler} value={this.state.newMsg.to_email} />\n                    </Form.Group>\n                    <Form.Group controlId=\"subject\">\n                        <Form.Label>Subject:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Subject\" onChange={this.onChangeHandler} value={this.state.newMsg.subject} />\n                    </Form.Group>\n                    <Form.Group controlId=\"content\">\n                        <Form.Label>Content:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Content\" onChange={this.onChangeHandler} value={this.state.newMsg.content} />\n                    </Form.Group>\n                    <Button variant=\"primary\" onClick={this.sendNewMsg}>\n                        Send\n                    </Button>\n                </Form>\n                <p style={{ color: 'red' }}>{this.state.errMsg}</p>\n            </React.Fragment>\n        );\n\n        let items = [];\n        let num_pages = this.state.messages.length / 5;\n        num_pages = this.state.messages.length % 5 == 0 ? num_pages : num_pages + 1;\n        console.log(\"num pages:\", num_pages);\n        for (let number = 1; number <= num_pages; number++) {\n            items.push(\n                <Pagination.Item key={number} active={number === this.state.active} onClick={() => this.onChangePageHandler(number)}>\n                    {number}\n                </Pagination.Item>,\n            );\n        }\n\n        let inbox = (\n            <React.Fragment>\n                <h2>Inbox</h2>\n                {this.state.messages\n                    .filter((el, index) => {\n                        return this.state.active * 5 - 5 <= index && this.state.active * 5 - 1 >= index;\n                    })\n                    .map(msg => {\n                        return (\n                            <Card style={{ marginTop: \"20px\" }} key={msg._id}>\n                                <Card.Header>From: {msg.from_email}</Card.Header>\n                                <Card.Body>\n                                    <Card.Text>\n                                        {`${msg.subject}\n                                         ${msg.content}`}\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        )\n                    })}\n                <br />\n                {items.length > 0 ? (\n                    <Pagination>{items}</Pagination>\n                ) : null}\n            </React.Fragment>\n        )\n\n        return (\n            <React.Fragment>\n                <Container>\n                    <Row>\n                        <h1>Messages</h1>\n                    </Row>\n                    <Row>\n                        <Button onClick={this.onInboxClickHandler}>Inbox</Button>\n                        <Button style={{ marginLeft: 10 }} onClick={this.onNewMsgClickHandler}>New Message</Button>\n                    </Row>\n                    {this.state.sendMsg ? new_message : null}\n                    {this.state.showInbox ? inbox : null}\n                </Container>\n            </React.Fragment>\n\n        )\n    }\n}\n\nexport default Messages;","import React, { Component } from 'react';\nimport { Container, Col, Row, ListGroup, Modal, Button, Form } from 'react-bootstrap';\nimport cookie from 'react-cookies';\nimport { backend_host } from '../../config';\nimport moment from 'moment';\nimport axios from 'axios';\n\nconst new_first_sort = (a, b) => {\n    return moment.utc(b.time).diff(moment.utc(a.time))\n}\n\nconst old_first_sort = (a, b) => {\n    return moment.utc(a.time).diff(moment.utc(b.time))\n}\n\nclass ContentPage extends Component {\n\n    state = {\n        all: [],\n        filter: \"all\",\n        sort: \"nf\"\n    }\n\n    componentDidMount() {\n        axios.get(`${backend_host}/activities`, {\n            headers: {\n                'Authorization': `Bearer ${cookie.load('JWT')}`\n            }\n        }).then(res => {\n            let context = res.data.activities.map(d => {\n                let ret = {};\n                ret.action = d.action;\n                ret.content = d.obj.content;\n                ret.time = d.time;\n                if (d.onObj === \"Answer\") {\n                    ret.id = d.obj.question_id\n                } else if (d.onObj === \"Question\") {\n                    ret.id = d.obj._id\n                }\n                return ret;\n            });\n            // Sort by date\n            context.sort(new_first_sort)\n\n            this.setState({\n                all: context\n            })\n\n        })\n    }\n\n    onChangeFilterHandler = (filter) => {\n        this.setState({\n            filter\n        })\n    }\n\n    onSortHandler = (sort) => {\n        this.setState({\n            sort\n        })\n    }\n\n    render() {\n\n        let data_to_render = [];\n\n        if (this.state.filter === 'all') data_to_render = this.state.all;\n        else if (this.state.filter === 'qa') data_to_render = this.state.all.filter(d => d.action === 'question_asked');\n        else if (this.state.filter === 'af') data_to_render = this.state.all.filter(d => d.action === 'question_followed');\n        else if (this.state.filter === 'a') data_to_render = this.state.all.filter(d => d.action === 'answer');\n\n        if (this.state.sort === 'nf') data_to_render.sort(new_first_sort);\n        else if (this.state.sort === 'of') data_to_render.sort(old_first_sort);\n\n        console.log(data_to_render)\n\n        return (\n            <React.Fragment>\n                <Container>\n                    <Row>\n                        <h3 className=\"ml-auto mr-auto\">Content Page</h3>\n                    </Row>\n                    <Row>\n                        <Col xs={4}>\n                            <h5>Filter</h5>\n                            <ListGroup defaultActiveKey=\"all\">\n                                <ListGroup.Item action eventKey=\"all\" onClick={() => this.onChangeFilterHandler(\"all\")}>\n                                    All\n                                </ListGroup.Item>\n                                <ListGroup.Item action eventKey=\"qa\" onClick={() => this.onChangeFilterHandler(\"qa\")}>\n                                    Questions Asked\n                                </ListGroup.Item>\n                                <ListGroup.Item action eventKey=\"qf\" onClick={() => this.onChangeFilterHandler(\"qf\")}>\n                                    Questions Followed\n                                </ListGroup.Item>\n                                <ListGroup.Item action eventKey=\"a\" onClick={() => this.onChangeFilterHandler(\"a\")}>\n                                    Answers\n                                </ListGroup.Item>\n                            </ListGroup>\n                            <hr />\n                            <h5>Sort</h5>\n                            <ListGroup defaultActiveKey=\"nf\">\n                                <ListGroup.Item action eventKey=\"nf\" onClick={() => this.onSortHandler(\"nf\")}>\n                                    Newest First\n                                </ListGroup.Item>\n                                <ListGroup.Item action eventKey=\"of\" onClick={() => this.onSortHandler(\"of\")}>\n                                    Oldest First\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                        <Col>\n                            <ListGroup>\n                                {data_to_render.map(d => {\n                                    return <ListGroup.Item key={`${d.id}${d.time}`}>\n                                        {d.content}\n                                    </ListGroup.Item>\n                                })}\n                            </ListGroup>\n                        </Col>\n                    </Row>\n                </Container>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default ContentPage;","import React, { Component } from 'react';\nimport { Container, Row, Button, Form, Card, Pagination, Modal } from 'react-bootstrap';\nimport cookie from 'react-cookies';\nimport axios from 'axios';\nimport { backend_host } from '../../config'\n\nclass AnalysisPage extends Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                <Container>\n                    <Row>\n                        <h3 className=\"ml-auto mr-auto\">Stats Page</h3>\n                    </Row>\n                    <Row>\n                        Charts\n                    </Row>\n                </Container>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default AnalysisPage;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './Login/Login';\nimport SignUp from './SignUp/SignUp';\nimport Home from './Home/Home';\nimport QuestionPage from './QuestionPage/QuestionPage';\nimport SidebarLayout from './SidebarLayout/SidebarLayout';\nimport Navbar from './NavBar/Navbar'\nimport TopicPage from './TopicPage/TopicPage';\nimport ProfilePage from './Profile/Profile';\nimport MessagesPage from './Messages/Messages';\nimport ContentPage from './ContentPage/ContentPage';\nimport AnalysisPage from './AnalysisPage/AnalysisPage';\n\n//Create a Main Component\nclass Main extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar />\n                <Switch>\n                    {/*Render Different Component based on Route*/}\n                    <SidebarLayout exact path=\"/\" component={Home} />\n\n                    <SidebarLayout path=\"/topics/:topic\" component={TopicPage} />\n\n                    <Route path=\"/login\" component={Login} />\n                    <Route path='/signup' component={SignUp} />\n\n                    <Route path=\"/questions/:questionId\" component={QuestionPage} />\n                    <Route path=\"/profile/:uid\" component={ProfilePage} />\n                    {/* <Route path=\"/profile/:uid\" render={(props) => <ProfilePage {...props}></ProfilePage>} /> */}\n                    <Route path=\"/messages/:uid\" component={MessagesPage} />\n                    <Route path=\"/content\" component={ContentPage} />\n                    <Route path=\"/stats\" component={AnalysisPage} />\n                </Switch>\n            </div>\n        )\n    }\n}\n//Export The Main Component\nexport default Main;","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/Main';\nimport {BrowserRouter} from 'react-router-dom';\nimport Navbar from './components/NavBar/Navbar'\n//App Component\nclass App extends Component {\n  render() {\n    return (\n      //Use Browser Router to route to different pages\n      <BrowserRouter>\n          {/* App Component Has a Child Component called Main*/}\n          <Main/>\n      </BrowserRouter>\n    );\n  }\n}\n//Export the App component so that it can be used in index.js\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport rootReducer from './_reducers';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer,\n                          composeEnhancer(applyMiddleware(thunk)));\n\n\n//render App component on the root element\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n\ndocument.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}